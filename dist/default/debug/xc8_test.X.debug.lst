

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Feb 15 22:02:28 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F917
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     	;# 
    25  0001                     	;# 
    26  0002                     	;# 
    27  0003                     	;# 
    28  0004                     	;# 
    29  0005                     	;# 
    30  0006                     	;# 
    31  0007                     	;# 
    32  0008                     	;# 
    33  0009                     	;# 
    34  000A                     	;# 
    35  000B                     	;# 
    36  000C                     	;# 
    37  000D                     	;# 
    38  000E                     	;# 
    39  000E                     	;# 
    40  000F                     	;# 
    41  0010                     	;# 
    42  0011                     	;# 
    43  0012                     	;# 
    44  0013                     	;# 
    45  0014                     	;# 
    46  0015                     	;# 
    47  0015                     	;# 
    48  0016                     	;# 
    49  0017                     	;# 
    50  0018                     	;# 
    51  0019                     	;# 
    52  001A                     	;# 
    53  001B                     	;# 
    54  001B                     	;# 
    55  001C                     	;# 
    56  001D                     	;# 
    57  001E                     	;# 
    58  001F                     	;# 
    59  0081                     	;# 
    60  0085                     	;# 
    61  0086                     	;# 
    62  0087                     	;# 
    63  0088                     	;# 
    64  0089                     	;# 
    65  008C                     	;# 
    66  008D                     	;# 
    67  008E                     	;# 
    68  008F                     	;# 
    69  0090                     	;# 
    70  0091                     	;# 
    71  0092                     	;# 
    72  0093                     	;# 
    73  0094                     	;# 
    74  0095                     	;# 
    75  0095                     	;# 
    76  0096                     	;# 
    77  0096                     	;# 
    78  0097                     	;# 
    79  0098                     	;# 
    80  0099                     	;# 
    81  009C                     	;# 
    82  009D                     	;# 
    83  009E                     	;# 
    84  009F                     	;# 
    85  0105                     	;# 
    86  0107                     	;# 
    87  0108                     	;# 
    88  0109                     	;# 
    89  010C                     	;# 
    90  010C                     	;# 
    91  010D                     	;# 
    92  010D                     	;# 
    93  010E                     	;# 
    94  010F                     	;# 
    95  0110                     	;# 
    96  0111                     	;# 
    97  0112                     	;# 
    98  0113                     	;# 
    99  0114                     	;# 
   100  0115                     	;# 
   101  0116                     	;# 
   102  0117                     	;# 
   103  0118                     	;# 
   104  0119                     	;# 
   105  011A                     	;# 
   106  011B                     	;# 
   107  011C                     	;# 
   108  011D                     	;# 
   109  011E                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  0087                     	;# 
   151  0088                     	;# 
   152  0089                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  008F                     	;# 
   157  0090                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0095                     	;# 
   163  0095                     	;# 
   164  0096                     	;# 
   165  0096                     	;# 
   166  0097                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  0105                     	;# 
   174  0107                     	;# 
   175  0108                     	;# 
   176  0109                     	;# 
   177  010C                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  0110                     	;# 
   184  0111                     	;# 
   185  0112                     	;# 
   186  0113                     	;# 
   187  0114                     	;# 
   188  0115                     	;# 
   189  0116                     	;# 
   190  0117                     	;# 
   191  0118                     	;# 
   192  0119                     	;# 
   193  011A                     	;# 
   194  011B                     	;# 
   195  011C                     	;# 
   196  011D                     	;# 
   197  011E                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  0000                     	;# 
   201  0001                     	;# 
   202  0002                     	;# 
   203  0003                     	;# 
   204  0004                     	;# 
   205  0005                     	;# 
   206  0006                     	;# 
   207  0007                     	;# 
   208  0008                     	;# 
   209  0009                     	;# 
   210  000A                     	;# 
   211  000B                     	;# 
   212  000C                     	;# 
   213  000D                     	;# 
   214  000E                     	;# 
   215  000E                     	;# 
   216  000F                     	;# 
   217  0010                     	;# 
   218  0011                     	;# 
   219  0012                     	;# 
   220  0013                     	;# 
   221  0014                     	;# 
   222  0015                     	;# 
   223  0015                     	;# 
   224  0016                     	;# 
   225  0017                     	;# 
   226  0018                     	;# 
   227  0019                     	;# 
   228  001A                     	;# 
   229  001B                     	;# 
   230  001B                     	;# 
   231  001C                     	;# 
   232  001D                     	;# 
   233  001E                     	;# 
   234  001F                     	;# 
   235  0081                     	;# 
   236  0085                     	;# 
   237  0086                     	;# 
   238  0087                     	;# 
   239  0088                     	;# 
   240  0089                     	;# 
   241  008C                     	;# 
   242  008D                     	;# 
   243  008E                     	;# 
   244  008F                     	;# 
   245  0090                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0094                     	;# 
   250  0095                     	;# 
   251  0095                     	;# 
   252  0096                     	;# 
   253  0096                     	;# 
   254  0097                     	;# 
   255  0098                     	;# 
   256  0099                     	;# 
   257  009C                     	;# 
   258  009D                     	;# 
   259  009E                     	;# 
   260  009F                     	;# 
   261  0105                     	;# 
   262  0107                     	;# 
   263  0108                     	;# 
   264  0109                     	;# 
   265  010C                     	;# 
   266  010C                     	;# 
   267  010D                     	;# 
   268  010D                     	;# 
   269  010E                     	;# 
   270  010F                     	;# 
   271  0110                     	;# 
   272  0111                     	;# 
   273  0112                     	;# 
   274  0113                     	;# 
   275  0114                     	;# 
   276  0115                     	;# 
   277  0116                     	;# 
   278  0117                     	;# 
   279  0118                     	;# 
   280  0119                     	;# 
   281  011A                     	;# 
   282  011B                     	;# 
   283  011C                     	;# 
   284  011D                     	;# 
   285  011E                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288                           
   289                           	psect	nvBANK0
   290  0052                     __pnvBANK0:	
   291  0052                     _freq:	
   292  0052                     	ds	4
   293  001F                     _ADCON0bits	set	31
   294  0015                     _CCPR1L	set	21
   295  001B                     _CCPR2L	set	27
   296  0008                     _PORTD	set	8
   297  00BA                     _CCP1M2	set	186
   298  00BB                     _CCP1M3	set	187
   299  00BD                     _CCP1X	set	189
   300  00BC                     _CCP1Y	set	188
   301  00EA                     _CCP2M2	set	234
   302  00EB                     _CCP2M3	set	235
   303  00ED                     _CCP2X	set	237
   304  00EC                     _CCP2Y	set	236
   305  0090                     _T2CKPS0	set	144
   306  0091                     _T2CKPS1	set	145
   307  0092                     _TMR2ON	set	146
   308  009F                     _ADCON1bits	set	159
   309  009E                     _ADRESL	set	158
   310  0091                     _ANSEL	set	145
   311  0092                     _PR2	set	146
   312  0085                     _TRISA	set	133
   313  0086                     _TRISBbits	set	134
   314  0088                     _TRISD	set	136
   315  0439                     _TRISC1	set	1081
   316  043A                     _TRISC2	set	1082
   317                           
   318                           ; #config settings
   319  0000                     
   320                           	psect	cinit
   321  07FA                     start_initialization:	
   322  07FA                     __initialization:	
   323                           
   324                           ; Clear objects allocated to BANK0
   325  07FA  01D6               	clrf	__pbssBANK0& (0+127)
   326  07FB  01D7               	clrf	(__pbssBANK0+1)& (0+127)
   327  07FC                     end_of_initialization:	
   328                           ;End of C runtime variable initialization code
   329                           
   330  07FC                     __end_of__initialization:	
   331  07FC  0183               	clrf	3
   332  07FD  120A  118A  2D5D   	ljmp	_main	;jump to C main() function
   333                           
   334                           	psect	bssBANK0
   335  0056                     __pbssBANK0:	
   336  0056                     _LED_Output:	
   337  0056                     	ds	2
   338                           
   339                           	psect	cstackCOMMON
   340  0071                     __pcstackCOMMON:	
   341  0071                     ?_init_adc:	
   342  0071                     ??_init_adc:	
   343                           ; 0 bytes @ 0x0
   344                           
   345  0071                     ?_PWM2_Duty:	
   346                           ; 0 bytes @ 0x0
   347                           
   348  0071                     ?_PWM2_Start:	
   349                           ; 0 bytes @ 0x0
   350                           
   351  0071                     ??_PWM2_Start:	
   352                           ; 0 bytes @ 0x0
   353                           
   354  0071                     ?_get_inputs:	
   355                           ; 0 bytes @ 0x0
   356                           
   357  0071                     ??_get_inputs:	
   358                           ; 0 bytes @ 0x0
   359                           
   360  0071                     ?_decide:	
   361                           ; 0 bytes @ 0x0
   362                           
   363  0071                     ??_decide:	
   364                           ; 0 bytes @ 0x0
   365                           
   366  0071                     ?_main:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0071                     ?_get_adc_value:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0071                     ?___ftpack:	
   373                           ; 2 bytes @ 0x0
   374                           
   375  0071                     ?___lldiv:	
   376                           ; 3 bytes @ 0x0
   377                           
   378  0071                     PWM2_Duty@duty:	
   379                           ; 4 bytes @ 0x0
   380                           
   381  0071                     ___ftpack@arg:	
   382                           ; 2 bytes @ 0x0
   383                           
   384  0071                     ___lldiv@divisor:	
   385                           ; 3 bytes @ 0x0
   386                           
   387                           
   388                           ; 4 bytes @ 0x0
   389  0071                     	ds	2
   390  0073                     ??_PWM2_Duty:	
   391  0073                     ??_get_adc_value:	
   392                           ; 0 bytes @ 0x2
   393                           
   394                           
   395                           ; 0 bytes @ 0x2
   396  0073                     	ds	1
   397  0074                     ___ftpack@exp:	
   398                           
   399                           ; 1 bytes @ 0x3
   400  0074                     	ds	1
   401  0075                     ___ftpack@sign:	
   402  0075                     ___lldiv@dividend:	
   403                           ; 1 bytes @ 0x4
   404                           
   405                           
   406                           ; 4 bytes @ 0x4
   407  0075                     	ds	1
   408  0076                     ??___ftpack:	
   409                           
   410                           ; 0 bytes @ 0x5
   411  0076                     	ds	3
   412  0079                     ??___lldiv:	
   413  0079                     ?___lwtoft:	
   414                           ; 0 bytes @ 0x8
   415                           
   416  0079                     ___lwtoft@c:	
   417                           ; 3 bytes @ 0x8
   418                           
   419                           
   420                           ; 2 bytes @ 0x8
   421  0079                     	ds	1
   422  007A                     ??_PWM2_Init:	
   423                           
   424                           ; 0 bytes @ 0x9
   425  007A                     	ds	2
   426  007C                     ??___lwtoft:	
   427                           
   428                           ; 0 bytes @ 0xB
   429  007C                     	ds	2
   430  007E                     ??_main:	
   431                           
   432                           	psect	cstackBANK0
   433  0020                     __pcstackBANK0:	
   434                           ; 0 bytes @ 0xD
   435                           
   436  0020                     ?___ftdiv:	
   437  0020                     ___ftdiv@f2:	
   438                           ; 3 bytes @ 0x0
   439                           
   440  0020                     ___lldiv@quotient:	
   441                           ; 3 bytes @ 0x0
   442                           
   443                           
   444                           ; 4 bytes @ 0x0
   445  0020                     	ds	3
   446  0023                     ___ftdiv@f1:	
   447                           
   448                           ; 3 bytes @ 0x3
   449  0023                     	ds	1
   450  0024                     ___lldiv@counter:	
   451                           
   452                           ; 1 bytes @ 0x4
   453  0024                     	ds	1
   454  0025                     ?_PWM2_Init:	
   455  0025                     PWM2_Init@fre:	
   456                           ; 0 bytes @ 0x5
   457                           
   458                           
   459                           ; 4 bytes @ 0x5
   460  0025                     	ds	1
   461  0026                     ??___ftdiv:	
   462                           
   463                           ; 0 bytes @ 0x6
   464  0026                     	ds	4
   465  002A                     ___ftdiv@cntr:	
   466                           
   467                           ; 1 bytes @ 0xA
   468  002A                     	ds	1
   469  002B                     ___ftdiv@f3:	
   470                           
   471                           ; 3 bytes @ 0xB
   472  002B                     	ds	3
   473  002E                     ___ftdiv@exp:	
   474                           
   475                           ; 1 bytes @ 0xE
   476  002E                     	ds	1
   477  002F                     ___ftdiv@sign:	
   478                           
   479                           ; 1 bytes @ 0xF
   480  002F                     	ds	1
   481  0030                     ?___ftmul:	
   482  0030                     ___ftmul@f1:	
   483                           ; 3 bytes @ 0x10
   484                           
   485                           
   486                           ; 3 bytes @ 0x10
   487  0030                     	ds	3
   488  0033                     ___ftmul@f2:	
   489                           
   490                           ; 3 bytes @ 0x13
   491  0033                     	ds	3
   492  0036                     ??___ftmul:	
   493                           
   494                           ; 0 bytes @ 0x16
   495  0036                     	ds	4
   496  003A                     ___ftmul@exp:	
   497                           
   498                           ; 1 bytes @ 0x1A
   499  003A                     	ds	1
   500  003B                     ___ftmul@f3_as_product:	
   501                           
   502                           ; 3 bytes @ 0x1B
   503  003B                     	ds	3
   504  003E                     ___ftmul@cntr:	
   505                           
   506                           ; 1 bytes @ 0x1E
   507  003E                     	ds	1
   508  003F                     ___ftmul@sign:	
   509                           
   510                           ; 1 bytes @ 0x1F
   511  003F                     	ds	1
   512  0040                     ?___fttol:	
   513  0040                     ___fttol@f1:	
   514                           ; 4 bytes @ 0x20
   515                           
   516                           
   517                           ; 3 bytes @ 0x20
   518  0040                     	ds	4
   519  0044                     ??___fttol:	
   520                           
   521                           ; 0 bytes @ 0x24
   522  0044                     	ds	4
   523  0048                     ___fttol@sign1:	
   524                           
   525                           ; 1 bytes @ 0x28
   526  0048                     	ds	1
   527  0049                     ___fttol@lval:	
   528                           
   529                           ; 4 bytes @ 0x29
   530  0049                     	ds	4
   531  004D                     ___fttol@exp1:	
   532                           
   533                           ; 1 bytes @ 0x2D
   534  004D                     	ds	1
   535  004E                     main@adc_value:	
   536                           
   537                           ; 2 bytes @ 0x2E
   538  004E                     	ds	2
   539  0050                     main@duty:	
   540                           
   541                           ; 2 bytes @ 0x30
   542  0050                     	ds	2
   543                           
   544                           	psect	maintext
   545  055D                     __pmaintext:	
   546 ;;
   547 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   548 ;;
   549 ;; *************** function _main *****************
   550 ;; Defined at:
   551 ;;		line 22 in file "main.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;  duty            2   48[BANK0 ] unsigned int 
   556 ;;  adc_value       2   46[BANK0 ] unsigned int 
   557 ;; Return value:  Size  Location     Type
   558 ;;		None               void
   559 ;; Registers used:
   560 ;;		wreg, status,2, status,0, pclath, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : B00/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   566 ;;      Params:         0       0       0       0       0
   567 ;;      Locals:         0       4       0       0       0
   568 ;;      Temps:          0       0       0       0       0
   569 ;;      Totals:         0       4       0       0       0
   570 ;;Total ram usage:        4 bytes
   571 ;; Hardware stack levels required when called:    2
   572 ;; This function calls:
   573 ;;		_PWM2_Duty
   574 ;;		_PWM2_Init
   575 ;;		_PWM2_Start
   576 ;;		___ftdiv
   577 ;;		___ftmul
   578 ;;		___fttol
   579 ;;		___lwtoft
   580 ;;		_decide
   581 ;;		_get_adc_value
   582 ;;		_get_inputs
   583 ;;		_init_adc
   584 ;; This function is called by:
   585 ;;		Startup code after reset
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           
   590                           ;psect for function _main
   591  055D                     _main:	
   592                           
   593                           ;main.c: 24: unsigned int adc_value, duty;
   594                           ;main.c: 26: init_adc();
   595                           
   596                           ;incstack = 0
   597                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   598  055D  120A  118A  2419  120A  118A  	fcall	_init_adc
   599                           
   600                           ;main.c: 28: PORTD = 0x0;
   601  0562  1283               	bcf	3,5	;RP0=0, select bank0
   602  0563  1303               	bcf	3,6	;RP1=0, select bank0
   603  0564  0188               	clrf	8	;volatile
   604                           
   605                           ;main.c: 31: PWM2_Init(1000);
   606  0565  3000               	movlw	0
   607  0566  00A8               	movwf	PWM2_Init@fre+3
   608  0567  3000               	movlw	0
   609  0568  00A7               	movwf	PWM2_Init@fre+2
   610  0569  3003               	movlw	3
   611  056A  00A6               	movwf	PWM2_Init@fre+1
   612  056B  30E8               	movlw	232
   613  056C  00A5               	movwf	PWM2_Init@fre
   614  056D  120A  118A  2452  120A  118A  	fcall	_PWM2_Init
   615                           
   616                           ;main.c: 32: PWM2_Duty(200);
   617  0572  30C8               	movlw	200
   618  0573  00F1               	movwf	PWM2_Duty@duty
   619  0574  3000               	movlw	0
   620  0575  00F2               	movwf	PWM2_Duty@duty+1
   621  0576  120A  118A  242E  120A  118A  	fcall	_PWM2_Duty
   622                           
   623                           ;main.c: 33: PWM2_Start();
   624  057B  120A  118A  23E1  120A  118A  	fcall	_PWM2_Start
   625  0580                     l1107:	
   626                           ;main.c: 35: while (1) {
   627                           
   628                           
   629                           ;main.c: 36: get_inputs();
   630  0580  120A  118A  23F8  120A  118A  	fcall	_get_inputs
   631                           
   632                           ;main.c: 37: decide();
   633  0585  120A  118A  23EC  120A  118A  	fcall	_decide
   634                           
   635                           ;main.c: 38: adc_value = get_adc_value();
   636  058A  120A  118A  23DA  120A  118A  	fcall	_get_adc_value
   637  058F  0872               	movf	?_get_adc_value+1,w
   638  0590  1283               	bcf	3,5	;RP0=0, select bank0
   639  0591  1303               	bcf	3,6	;RP1=0, select bank0
   640  0592  00CF               	movwf	main@adc_value+1
   641  0593  0871               	movf	?_get_adc_value,w
   642  0594  00CE               	movwf	main@adc_value
   643                           
   644                           ;main.c: 39: duty = (float)adc_value/ 255 * 1023;
   645  0595  084F               	movf	main@adc_value+1,w
   646  0596  00FA               	movwf	___lwtoft@c+1
   647  0597  084E               	movf	main@adc_value,w
   648  0598  00F9               	movwf	___lwtoft@c
   649  0599  120A  118A  2405  120A  118A  	fcall	___lwtoft
   650  059E  0879               	movf	?___lwtoft,w
   651  059F  1283               	bcf	3,5	;RP0=0, select bank0
   652  05A0  1303               	bcf	3,6	;RP1=0, select bank0
   653  05A1  00A3               	movwf	___ftdiv@f1
   654  05A2  087A               	movf	?___lwtoft+1,w
   655  05A3  00A4               	movwf	___ftdiv@f1+1
   656  05A4  087B               	movf	?___lwtoft+2,w
   657  05A5  00A5               	movwf	___ftdiv@f1+2
   658  05A6  3000               	movlw	0
   659  05A7  00A0               	movwf	___ftdiv@f2
   660  05A8  307F               	movlw	127
   661  05A9  00A1               	movwf	___ftdiv@f2+1
   662  05AA  3043               	movlw	67
   663  05AB  00A2               	movwf	___ftdiv@f2+2
   664  05AC  120A  118A  266F  120A  118A  	fcall	___ftdiv
   665  05B1  1283               	bcf	3,5	;RP0=0, select bank0
   666  05B2  1303               	bcf	3,6	;RP1=0, select bank0
   667  05B3  0820               	movf	?___ftdiv,w
   668  05B4  00B3               	movwf	___ftmul@f2
   669  05B5  0821               	movf	?___ftdiv+1,w
   670  05B6  00B4               	movwf	___ftmul@f2+1
   671  05B7  0822               	movf	?___ftdiv+2,w
   672  05B8  00B5               	movwf	___ftmul@f2+2
   673  05B9  30C0               	movlw	192
   674  05BA  00B0               	movwf	___ftmul@f1
   675  05BB  307F               	movlw	127
   676  05BC  00B1               	movwf	___ftmul@f1+1
   677  05BD  3044               	movlw	68
   678  05BE  00B2               	movwf	___ftmul@f1+2
   679  05BF  120A  118A  2727  120A  118A  	fcall	___ftmul
   680  05C4  1283               	bcf	3,5	;RP0=0, select bank0
   681  05C5  1303               	bcf	3,6	;RP1=0, select bank0
   682  05C6  0830               	movf	?___ftmul,w
   683  05C7  00C0               	movwf	___fttol@f1
   684  05C8  0831               	movf	?___ftmul+1,w
   685  05C9  00C1               	movwf	___fttol@f1+1
   686  05CA  0832               	movf	?___ftmul+2,w
   687  05CB  00C2               	movwf	___fttol@f1+2
   688  05CC  120A  118A  25E1  120A  118A  	fcall	___fttol
   689  05D1  1283               	bcf	3,5	;RP0=0, select bank0
   690  05D2  1303               	bcf	3,6	;RP1=0, select bank0
   691  05D3  0841               	movf	?___fttol+1,w
   692  05D4  00D1               	movwf	main@duty+1
   693  05D5  0840               	movf	?___fttol,w
   694  05D6  00D0               	movwf	main@duty
   695                           
   696                           ;main.c: 40: PWM2_Duty( duty );
   697  05D7  0851               	movf	main@duty+1,w
   698  05D8  00F2               	movwf	PWM2_Duty@duty+1
   699  05D9  0850               	movf	main@duty,w
   700  05DA  00F1               	movwf	PWM2_Duty@duty
   701  05DB  120A  118A  242E  120A  118A  	fcall	_PWM2_Duty
   702  05E0  2D80               	goto	l1107
   703  05E1                     __end_of_main:	
   704                           
   705                           	psect	text1
   706  0419                     __ptext1:	
   707 ;; *************** function _init_adc *****************
   708 ;; Defined at:
   709 ;;		line 14 in file "adc.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;		None               void
   716 ;; Registers used:
   717 ;;		wreg, status,2, status,0
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   723 ;;      Params:         0       0       0       0       0
   724 ;;      Locals:         0       0       0       0       0
   725 ;;      Temps:          0       0       0       0       0
   726 ;;      Totals:         0       0       0       0       0
   727 ;;Total ram usage:        0 bytes
   728 ;; Hardware stack levels used:    1
   729 ;; This function calls:
   730 ;;		Nothing
   731 ;; This function is called by:
   732 ;;		_main
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           
   737                           ;psect for function _init_adc
   738  0419                     _init_adc:	
   739                           
   740                           ;adc.c: 18: TRISBbits.TRISB4 = 1;
   741                           
   742                           ;incstack = 0
   743                           ; Regs used in _init_adc: [wreg+status,2+status,0]
   744  0419  1683               	bsf	3,5	;RP0=1, select bank1
   745  041A  1303               	bcf	3,6	;RP1=0, select bank1
   746  041B  1606               	bsf	6,4	;volatile
   747                           
   748                           ;adc.c: 20: ANSEL = 0x01;
   749  041C  3001               	movlw	1
   750  041D  0091               	movwf	17	;volatile
   751                           
   752                           ;adc.c: 21: TRISA = 0xFF;
   753  041E  30FF               	movlw	255
   754  041F  0085               	movwf	5	;volatile
   755                           
   756                           ;adc.c: 23: TRISD = 0x00;
   757  0420  0188               	clrf	8	;volatile
   758                           
   759                           ;adc.c: 27: ADCON1bits.ADCS = 0b11;
   760  0421  081F               	movf	31,w	;volatile
   761  0422  398F               	andlw	-113
   762  0423  3830               	iorlw	48
   763  0424  009F               	movwf	31	;volatile
   764                           
   765                           ;adc.c: 30: ADCON0bits.VCFG = 0;
   766  0425  309F               	movlw	-97
   767  0426  1283               	bcf	3,5	;RP0=0, select bank0
   768  0427  1303               	bcf	3,6	;RP1=0, select bank0
   769  0428  059F               	andwf	31,f	;volatile
   770                           
   771                           ;adc.c: 32: ADCON0bits.CHS = 0b000;
   772  0429  30E3               	movlw	-29
   773  042A  059F               	andwf	31,f	;volatile
   774                           
   775                           ;adc.c: 34: ADCON0bits.ADFM = 1;
   776  042B  179F               	bsf	31,7	;volatile
   777                           
   778                           ;adc.c: 36: ADCON0bits.ADON = 1;
   779  042C  141F               	bsf	31,0	;volatile
   780  042D  0008               	return
   781  042E                     __end_of_init_adc:	
   782                           
   783                           	psect	text2
   784  03F8                     __ptext2:	
   785 ;; *************** function _get_inputs *****************
   786 ;; Defined at:
   787 ;;		line 45 in file "adc.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;		None
   792 ;; Return value:  Size  Location     Type
   793 ;;		None               void
   794 ;; Registers used:
   795 ;;		wreg
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   801 ;;      Params:         0       0       0       0       0
   802 ;;      Locals:         0       0       0       0       0
   803 ;;      Temps:          1       0       0       0       0
   804 ;;      Totals:         1       0       0       0       0
   805 ;;Total ram usage:        1 bytes
   806 ;; Hardware stack levels used:    1
   807 ;; This function calls:
   808 ;;		Nothing
   809 ;; This function is called by:
   810 ;;		_main
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           
   815                           ;psect for function _get_inputs
   816  03F8                     _get_inputs:	
   817                           
   818                           ;adc.c: 49: _delay((unsigned long)((1)*(4000000/4000.0)));
   819                           
   820                           ;incstack = 0
   821                           ; Regs used in _get_inputs: [wreg]
   822  03F8  30F9               	movlw	249
   823  03F9  00F1               	movwf	??_get_inputs
   824  03FA                     u1227:	
   825  03FA  0000               	nop
   826  03FB  0BF1               	decfsz	??_get_inputs,f
   827  03FC  2BFA               	goto	u1227
   828  03FD  2BFE               	nop2	;nop
   829  03FE  0000               	nop
   830                           
   831                           ;adc.c: 51: ADCON0bits.GO_nDONE = 1;
   832  03FF  1283               	bcf	3,5	;RP0=0, select bank0
   833  0400  1303               	bcf	3,6	;RP1=0, select bank0
   834  0401  149F               	bsf	31,1	;volatile
   835  0402                     l48:	
   836                           ;adc.c: 56: while(ADCON0bits.GO_nDONE == 1);
   837                           
   838  0402  1C9F               	btfss	31,1	;volatile
   839  0403  0008               	return
   840  0404  2C02               	goto	l48
   841  0405                     __end_of_get_inputs:	
   842                           
   843                           	psect	text3
   844  03DA                     __ptext3:	
   845 ;; *************** function _get_adc_value *****************
   846 ;; Defined at:
   847 ;;		line 89 in file "adc.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  2    0[COMMON] unsigned int 
   854 ;; Registers used:
   855 ;;		wreg
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         2       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0
   864 ;;      Totals:         2       0       0       0       0
   865 ;;Total ram usage:        2 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_main
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           
   875                           ;psect for function _get_adc_value
   876  03DA                     _get_adc_value:	
   877                           
   878                           ;adc.c: 91: return LED_Output;
   879                           
   880                           ;incstack = 0
   881                           ; Regs used in _get_adc_value: [wreg]
   882  03DA  1283               	bcf	3,5	;RP0=0, select bank0
   883  03DB  1303               	bcf	3,6	;RP1=0, select bank0
   884  03DC  0857               	movf	_LED_Output+1,w
   885  03DD  00F2               	movwf	?_get_adc_value+1
   886  03DE  0856               	movf	_LED_Output,w
   887  03DF  00F1               	movwf	?_get_adc_value
   888  03E0  0008               	return
   889  03E1                     __end_of_get_adc_value:	
   890                           
   891                           	psect	text4
   892  03EC                     __ptext4:	
   893 ;; *************** function _decide *****************
   894 ;; Defined at:
   895 ;;		line 66 in file "adc.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;		None               void
   902 ;; Registers used:
   903 ;;		wreg
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         0       0       0       0       0
   910 ;;      Locals:         0       0       0       0       0
   911 ;;      Temps:          2       0       0       0       0
   912 ;;      Totals:         2       0       0       0       0
   913 ;;Total ram usage:        2 bytes
   914 ;; Hardware stack levels used:    1
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           
   923                           ;psect for function _decide
   924  03EC                     _decide:	
   925                           
   926                           ;adc.c: 70: LED_Output = ADRESL;
   927                           
   928                           ;incstack = 0
   929                           ; Regs used in _decide: [wreg]
   930  03EC  1683               	bsf	3,5	;RP0=1, select bank1
   931  03ED  1303               	bcf	3,6	;RP1=0, select bank1
   932  03EE  081E               	movf	30,w	;volatile
   933  03EF  00F1               	movwf	??_decide
   934  03F0  01F2               	clrf	??_decide+1
   935  03F1  0871               	movf	??_decide,w
   936  03F2  1283               	bcf	3,5	;RP0=0, select bank0
   937  03F3  1303               	bcf	3,6	;RP1=0, select bank0
   938  03F4  00D6               	movwf	_LED_Output
   939  03F5  0872               	movf	??_decide+1,w
   940  03F6  00D7               	movwf	_LED_Output+1
   941  03F7  0008               	return
   942  03F8                     __end_of_decide:	
   943                           
   944                           	psect	text5
   945  0405                     __ptext5:	
   946 ;; *************** function ___lwtoft *****************
   947 ;; Defined at:
   948 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwtoft.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;  c               2    8[COMMON] unsigned int 
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  3    8[COMMON] float 
   955 ;; Registers used:
   956 ;;		wreg, status,2, status,0, pclath, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   962 ;;      Params:         3       0       0       0       0
   963 ;;      Locals:         0       0       0       0       0
   964 ;;      Temps:          1       0       0       0       0
   965 ;;      Totals:         4       0       0       0       0
   966 ;;Total ram usage:        4 bytes
   967 ;; Hardware stack levels used:    1
   968 ;; Hardware stack levels required when called:    1
   969 ;; This function calls:
   970 ;;		___ftpack
   971 ;; This function is called by:
   972 ;;		_main
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           
   977                           ;psect for function ___lwtoft
   978  0405                     ___lwtoft:	
   979                           
   980                           ;incstack = 0
   981                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
   982  0405  0879               	movf	___lwtoft@c,w
   983  0406  00F1               	movwf	___ftpack@arg
   984  0407  087A               	movf	___lwtoft@c+1,w
   985  0408  00F2               	movwf	___ftpack@arg+1
   986  0409  01F3               	clrf	___ftpack@arg+2
   987  040A  308E               	movlw	142
   988  040B  00FC               	movwf	??___lwtoft
   989  040C  087C               	movf	??___lwtoft,w
   990  040D  00F4               	movwf	___ftpack@exp
   991  040E  01F5               	clrf	___ftpack@sign
   992  040F  120A  118A  24F1   	fcall	___ftpack
   993  0412  0871               	movf	?___ftpack,w
   994  0413  00F9               	movwf	?___lwtoft
   995  0414  0872               	movf	?___ftpack+1,w
   996  0415  00FA               	movwf	?___lwtoft+1
   997  0416  0873               	movf	?___ftpack+2,w
   998  0417  00FB               	movwf	?___lwtoft+2
   999  0418  0008               	return
  1000  0419                     __end_of___lwtoft:	
  1001                           
  1002                           	psect	text6
  1003  05E1                     __ptext6:	
  1004 ;; *************** function ___fttol *****************
  1005 ;; Defined at:
  1006 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;  f1              3   32[BANK0 ] float 
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;  lval            4   41[BANK0 ] unsigned long 
  1011 ;;  exp1            1   45[BANK0 ] unsigned char 
  1012 ;;  sign1           1   40[BANK0 ] unsigned char 
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  4   32[BANK0 ] long 
  1015 ;; Registers used:
  1016 ;;		wreg, status,2, status,0
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1022 ;;      Params:         0       4       0       0       0
  1023 ;;      Locals:         0       6       0       0       0
  1024 ;;      Temps:          0       4       0       0       0
  1025 ;;      Totals:         0      14       0       0       0
  1026 ;;Total ram usage:       14 bytes
  1027 ;; Hardware stack levels used:    1
  1028 ;; This function calls:
  1029 ;;		Nothing
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           
  1036                           ;psect for function ___fttol
  1037  05E1                     ___fttol:	
  1038                           
  1039                           ;incstack = 0
  1040                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1041  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  1042  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  1043  05E3  0840               	movf	___fttol@f1,w
  1044  05E4  00C4               	movwf	??___fttol
  1045  05E5  0841               	movf	___fttol@f1+1,w
  1046  05E6  00C5               	movwf	??___fttol+1
  1047  05E7  0842               	movf	___fttol@f1+2,w
  1048  05E8  00C6               	movwf	??___fttol+2
  1049  05E9  1003               	clrc
  1050  05EA  0D45               	rlf	??___fttol+1,w
  1051  05EB  0D46               	rlf	??___fttol+2,w
  1052  05EC  00C7               	movwf	??___fttol+3
  1053  05ED  0847               	movf	??___fttol+3,w
  1054  05EE  00CD               	movwf	___fttol@exp1
  1055  05EF  084D               	movf	___fttol@exp1,w
  1056  05F0  1D03               	btfss	3,2
  1057  05F1  2DFB               	goto	l1057
  1058  05F2  3000               	movlw	0
  1059  05F3  00C3               	movwf	?___fttol+3
  1060  05F4  3000               	movlw	0
  1061  05F5  00C2               	movwf	?___fttol+2
  1062  05F6  3000               	movlw	0
  1063  05F7  00C1               	movwf	?___fttol+1
  1064  05F8  3000               	movlw	0
  1065  05F9  00C0               	movwf	?___fttol
  1066  05FA  0008               	return
  1067  05FB                     l1057:	
  1068  05FB  0840               	movf	___fttol@f1,w
  1069  05FC  00C4               	movwf	??___fttol
  1070  05FD  0841               	movf	___fttol@f1+1,w
  1071  05FE  00C5               	movwf	??___fttol+1
  1072  05FF  0842               	movf	___fttol@f1+2,w
  1073  0600  00C6               	movwf	??___fttol+2
  1074  0601  3017               	movlw	23
  1075  0602                     u1115:	
  1076  0602  1003               	clrc
  1077  0603  0CC6               	rrf	??___fttol+2,f
  1078  0604  0CC5               	rrf	??___fttol+1,f
  1079  0605  0CC4               	rrf	??___fttol,f
  1080  0606  3EFF               	addlw	-1
  1081  0607  1D03               	skipz
  1082  0608  2E02               	goto	u1115
  1083  0609  0844               	movf	??___fttol,w
  1084  060A  00C7               	movwf	??___fttol+3
  1085  060B  0847               	movf	??___fttol+3,w
  1086  060C  00C8               	movwf	___fttol@sign1
  1087  060D  17C1               	bsf	___fttol@f1+1,7
  1088  060E  30FF               	movlw	255
  1089  060F  05C0               	andwf	___fttol@f1,f
  1090  0610  30FF               	movlw	255
  1091  0611  05C1               	andwf	___fttol@f1+1,f
  1092  0612  3000               	movlw	0
  1093  0613  05C2               	andwf	___fttol@f1+2,f
  1094  0614  0840               	movf	___fttol@f1,w
  1095  0615  00C9               	movwf	___fttol@lval
  1096  0616  0841               	movf	___fttol@f1+1,w
  1097  0617  00CA               	movwf	___fttol@lval+1
  1098  0618  0842               	movf	___fttol@f1+2,w
  1099  0619  00CB               	movwf	___fttol@lval+2
  1100  061A  01CC               	clrf	___fttol@lval+3
  1101  061B  308E               	movlw	142
  1102  061C  02CD               	subwf	___fttol@exp1,f
  1103  061D  1FCD               	btfss	___fttol@exp1,7
  1104  061E  2E3D               	goto	l1077
  1105  061F  084D               	movf	___fttol@exp1,w
  1106  0620  3A80               	xorlw	128
  1107  0621  3E8F               	addlw	143
  1108  0622  1803               	skipnc
  1109  0623  2E2D               	goto	l1075
  1110  0624  3000               	movlw	0
  1111  0625  00C3               	movwf	?___fttol+3
  1112  0626  3000               	movlw	0
  1113  0627  00C2               	movwf	?___fttol+2
  1114  0628  3000               	movlw	0
  1115  0629  00C1               	movwf	?___fttol+1
  1116  062A  3000               	movlw	0
  1117  062B  00C0               	movwf	?___fttol
  1118  062C  0008               	return
  1119  062D                     l1075:	
  1120  062D  3001               	movlw	1
  1121  062E                     u1145:	
  1122  062E  1003               	clrc
  1123  062F  0CCC               	rrf	___fttol@lval+3,f
  1124  0630  0CCB               	rrf	___fttol@lval+2,f
  1125  0631  0CCA               	rrf	___fttol@lval+1,f
  1126  0632  0CC9               	rrf	___fttol@lval,f
  1127  0633  3EFF               	addlw	-1
  1128  0634  1D03               	skipz
  1129  0635  2E2E               	goto	u1145
  1130  0636  3001               	movlw	1
  1131  0637  00C4               	movwf	??___fttol
  1132  0638  0844               	movf	??___fttol,w
  1133  0639  07CD               	addwf	___fttol@exp1,f
  1134  063A  1903               	btfsc	3,2
  1135  063B  2E58               	goto	l1085
  1136  063C  2E2D               	goto	l1075
  1137  063D                     l1077:	
  1138  063D  3018               	movlw	24
  1139  063E  024D               	subwf	___fttol@exp1,w
  1140  063F  1C03               	skipc
  1141  0640  2E55               	goto	l459
  1142  0641  3000               	movlw	0
  1143  0642  00C3               	movwf	?___fttol+3
  1144  0643  3000               	movlw	0
  1145  0644  00C2               	movwf	?___fttol+2
  1146  0645  3000               	movlw	0
  1147  0646  00C1               	movwf	?___fttol+1
  1148  0647  3000               	movlw	0
  1149  0648  00C0               	movwf	?___fttol
  1150  0649  0008               	return
  1151  064A                     l1083:	
  1152  064A  3001               	movlw	1
  1153  064B  00C4               	movwf	??___fttol
  1154  064C                     u1175:	
  1155  064C  1003               	clrc
  1156  064D  0DC9               	rlf	___fttol@lval,f
  1157  064E  0DCA               	rlf	___fttol@lval+1,f
  1158  064F  0DCB               	rlf	___fttol@lval+2,f
  1159  0650  0DCC               	rlf	___fttol@lval+3,f
  1160  0651  0BC4               	decfsz	??___fttol,f
  1161  0652  2E4C               	goto	u1175
  1162  0653  3001               	movlw	1
  1163  0654  02CD               	subwf	___fttol@exp1,f
  1164  0655                     l459:	
  1165  0655  084D               	movf	___fttol@exp1,w
  1166  0656  1D03               	btfss	3,2
  1167  0657  2E4A               	goto	l1083
  1168  0658                     l1085:	
  1169  0658  0848               	movf	___fttol@sign1,w
  1170  0659  1903               	btfsc	3,2
  1171  065A  2E66               	goto	l1089
  1172  065B  09C9               	comf	___fttol@lval,f
  1173  065C  09CA               	comf	___fttol@lval+1,f
  1174  065D  09CB               	comf	___fttol@lval+2,f
  1175  065E  09CC               	comf	___fttol@lval+3,f
  1176  065F  0AC9               	incf	___fttol@lval,f
  1177  0660  1903               	skipnz
  1178  0661  0ACA               	incf	___fttol@lval+1,f
  1179  0662  1903               	skipnz
  1180  0663  0ACB               	incf	___fttol@lval+2,f
  1181  0664  1903               	skipnz
  1182  0665  0ACC               	incf	___fttol@lval+3,f
  1183  0666                     l1089:	
  1184  0666  084C               	movf	___fttol@lval+3,w
  1185  0667  00C3               	movwf	?___fttol+3
  1186  0668  084B               	movf	___fttol@lval+2,w
  1187  0669  00C2               	movwf	?___fttol+2
  1188  066A  084A               	movf	___fttol@lval+1,w
  1189  066B  00C1               	movwf	?___fttol+1
  1190  066C  0849               	movf	___fttol@lval,w
  1191  066D  00C0               	movwf	?___fttol
  1192  066E  0008               	return
  1193  066F                     __end_of___fttol:	
  1194                           
  1195                           	psect	text7
  1196  0727                     __ptext7:	
  1197 ;; *************** function ___ftmul *****************
  1198 ;; Defined at:
  1199 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  f1              3   16[BANK0 ] float 
  1202 ;;  f2              3   19[BANK0 ] float 
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  1205 ;;  sign            1   31[BANK0 ] unsigned char 
  1206 ;;  cntr            1   30[BANK0 ] unsigned char 
  1207 ;;  exp             1   26[BANK0 ] unsigned char 
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  3   16[BANK0 ] float 
  1210 ;; Registers used:
  1211 ;;		wreg, status,2, status,0, pclath, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1217 ;;      Params:         0       6       0       0       0
  1218 ;;      Locals:         0       6       0       0       0
  1219 ;;      Temps:          0       4       0       0       0
  1220 ;;      Totals:         0      16       0       0       0
  1221 ;;Total ram usage:       16 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; Hardware stack levels required when called:    1
  1224 ;; This function calls:
  1225 ;;		___ftpack
  1226 ;; This function is called by:
  1227 ;;		_main
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           
  1232                           ;psect for function ___ftmul
  1233  0727                     ___ftmul:	
  1234                           
  1235                           ;incstack = 0
  1236                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1237  0727  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0728  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0729  0830               	movf	___ftmul@f1,w
  1240  072A  00B6               	movwf	??___ftmul
  1241  072B  0831               	movf	___ftmul@f1+1,w
  1242  072C  00B7               	movwf	??___ftmul+1
  1243  072D  0832               	movf	___ftmul@f1+2,w
  1244  072E  00B8               	movwf	??___ftmul+2
  1245  072F  1003               	clrc
  1246  0730  0D37               	rlf	??___ftmul+1,w
  1247  0731  0D38               	rlf	??___ftmul+2,w
  1248  0732  00B9               	movwf	??___ftmul+3
  1249  0733  0839               	movf	??___ftmul+3,w
  1250  0734  00BA               	movwf	___ftmul@exp
  1251  0735  083A               	movf	___ftmul@exp,w
  1252  0736  1D03               	btfss	3,2
  1253  0737  2F3F               	goto	l1007
  1254  0738  3000               	movlw	0
  1255  0739  00B0               	movwf	?___ftmul
  1256  073A  3000               	movlw	0
  1257  073B  00B1               	movwf	?___ftmul+1
  1258  073C  3000               	movlw	0
  1259  073D  00B2               	movwf	?___ftmul+2
  1260  073E  0008               	return
  1261  073F                     l1007:	
  1262  073F  0833               	movf	___ftmul@f2,w
  1263  0740  00B6               	movwf	??___ftmul
  1264  0741  0834               	movf	___ftmul@f2+1,w
  1265  0742  00B7               	movwf	??___ftmul+1
  1266  0743  0835               	movf	___ftmul@f2+2,w
  1267  0744  00B8               	movwf	??___ftmul+2
  1268  0745  1003               	clrc
  1269  0746  0D37               	rlf	??___ftmul+1,w
  1270  0747  0D38               	rlf	??___ftmul+2,w
  1271  0748  00B9               	movwf	??___ftmul+3
  1272  0749  0839               	movf	??___ftmul+3,w
  1273  074A  00BF               	movwf	___ftmul@sign
  1274  074B  083F               	movf	___ftmul@sign,w
  1275  074C  1D03               	btfss	3,2
  1276  074D  2F55               	goto	l1013
  1277  074E  3000               	movlw	0
  1278  074F  00B0               	movwf	?___ftmul
  1279  0750  3000               	movlw	0
  1280  0751  00B1               	movwf	?___ftmul+1
  1281  0752  3000               	movlw	0
  1282  0753  00B2               	movwf	?___ftmul+2
  1283  0754  0008               	return
  1284  0755                     l1013:	
  1285  0755  083F               	movf	___ftmul@sign,w
  1286  0756  3E7B               	addlw	123
  1287  0757  00B6               	movwf	??___ftmul
  1288  0758  0836               	movf	??___ftmul,w
  1289  0759  07BA               	addwf	___ftmul@exp,f
  1290  075A  0830               	movf	___ftmul@f1,w
  1291  075B  00B6               	movwf	??___ftmul
  1292  075C  0831               	movf	___ftmul@f1+1,w
  1293  075D  00B7               	movwf	??___ftmul+1
  1294  075E  0832               	movf	___ftmul@f1+2,w
  1295  075F  00B8               	movwf	??___ftmul+2
  1296  0760  3010               	movlw	16
  1297  0761                     u985:	
  1298  0761  1003               	clrc
  1299  0762  0CB8               	rrf	??___ftmul+2,f
  1300  0763  0CB7               	rrf	??___ftmul+1,f
  1301  0764  0CB6               	rrf	??___ftmul,f
  1302  0765  3EFF               	addlw	-1
  1303  0766  1D03               	skipz
  1304  0767  2F61               	goto	u985
  1305  0768  0836               	movf	??___ftmul,w
  1306  0769  00B9               	movwf	??___ftmul+3
  1307  076A  0839               	movf	??___ftmul+3,w
  1308  076B  00BF               	movwf	___ftmul@sign
  1309  076C  0833               	movf	___ftmul@f2,w
  1310  076D  00B6               	movwf	??___ftmul
  1311  076E  0834               	movf	___ftmul@f2+1,w
  1312  076F  00B7               	movwf	??___ftmul+1
  1313  0770  0835               	movf	___ftmul@f2+2,w
  1314  0771  00B8               	movwf	??___ftmul+2
  1315  0772  3010               	movlw	16
  1316  0773                     u995:	
  1317  0773  1003               	clrc
  1318  0774  0CB8               	rrf	??___ftmul+2,f
  1319  0775  0CB7               	rrf	??___ftmul+1,f
  1320  0776  0CB6               	rrf	??___ftmul,f
  1321  0777  3EFF               	addlw	-1
  1322  0778  1D03               	skipz
  1323  0779  2F73               	goto	u995
  1324  077A  0836               	movf	??___ftmul,w
  1325  077B  00B9               	movwf	??___ftmul+3
  1326  077C  0839               	movf	??___ftmul+3,w
  1327  077D  06BF               	xorwf	___ftmul@sign,f
  1328  077E  3080               	movlw	128
  1329  077F  00B6               	movwf	??___ftmul
  1330  0780  0836               	movf	??___ftmul,w
  1331  0781  05BF               	andwf	___ftmul@sign,f
  1332  0782  17B1               	bsf	___ftmul@f1+1,7
  1333  0783  17B4               	bsf	___ftmul@f2+1,7
  1334  0784  30FF               	movlw	255
  1335  0785  05B3               	andwf	___ftmul@f2,f
  1336  0786  30FF               	movlw	255
  1337  0787  05B4               	andwf	___ftmul@f2+1,f
  1338  0788  3000               	movlw	0
  1339  0789  05B5               	andwf	___ftmul@f2+2,f
  1340  078A  3000               	movlw	0
  1341  078B  00BB               	movwf	___ftmul@f3_as_product
  1342  078C  3000               	movlw	0
  1343  078D  00BC               	movwf	___ftmul@f3_as_product+1
  1344  078E  3000               	movlw	0
  1345  078F  00BD               	movwf	___ftmul@f3_as_product+2
  1346  0790  3007               	movlw	7
  1347  0791  00B6               	movwf	??___ftmul
  1348  0792  0836               	movf	??___ftmul,w
  1349  0793  00BE               	movwf	___ftmul@cntr
  1350  0794                     l1025:	
  1351  0794  1C30               	btfss	___ftmul@f1,0
  1352  0795  2FA4               	goto	l1029
  1353  0796  0833               	movf	___ftmul@f2,w
  1354  0797  07BB               	addwf	___ftmul@f3_as_product,f
  1355  0798  0834               	movf	___ftmul@f2+1,w
  1356  0799  1103               	clrz
  1357  079A  1803               	skipnc
  1358  079B  0A34               	incf	___ftmul@f2+1,w
  1359  079C  1D03               	btfss	3,2
  1360  079D  07BC               	addwf	___ftmul@f3_as_product+1,f
  1361  079E  0835               	movf	___ftmul@f2+2,w
  1362  079F  1103               	clrz
  1363  07A0  1803               	skipnc
  1364  07A1  0A35               	incf	___ftmul@f2+2,w
  1365  07A2  1D03               	btfss	3,2
  1366  07A3  07BD               	addwf	___ftmul@f3_as_product+2,f
  1367  07A4                     l1029:	
  1368  07A4  3001               	movlw	1
  1369  07A5                     u1025:	
  1370  07A5  1003               	clrc
  1371  07A6  0CB2               	rrf	___ftmul@f1+2,f
  1372  07A7  0CB1               	rrf	___ftmul@f1+1,f
  1373  07A8  0CB0               	rrf	___ftmul@f1,f
  1374  07A9  3EFF               	addlw	-1
  1375  07AA  1D03               	skipz
  1376  07AB  2FA5               	goto	u1025
  1377  07AC  3001               	movlw	1
  1378  07AD                     u1035:	
  1379  07AD  1003               	clrc
  1380  07AE  0DB3               	rlf	___ftmul@f2,f
  1381  07AF  0DB4               	rlf	___ftmul@f2+1,f
  1382  07B0  0DB5               	rlf	___ftmul@f2+2,f
  1383  07B1  3EFF               	addlw	-1
  1384  07B2  1D03               	skipz
  1385  07B3  2FAD               	goto	u1035
  1386  07B4  3001               	movlw	1
  1387  07B5  02BE               	subwf	___ftmul@cntr,f
  1388  07B6  1D03               	btfss	3,2
  1389  07B7  2F94               	goto	l1025
  1390  07B8  3009               	movlw	9
  1391  07B9  00B6               	movwf	??___ftmul
  1392  07BA  0836               	movf	??___ftmul,w
  1393  07BB  00BE               	movwf	___ftmul@cntr
  1394  07BC                     l1037:	
  1395  07BC  1C30               	btfss	___ftmul@f1,0
  1396  07BD  2FCC               	goto	l1041
  1397  07BE  0833               	movf	___ftmul@f2,w
  1398  07BF  07BB               	addwf	___ftmul@f3_as_product,f
  1399  07C0  0834               	movf	___ftmul@f2+1,w
  1400  07C1  1103               	clrz
  1401  07C2  1803               	skipnc
  1402  07C3  0A34               	incf	___ftmul@f2+1,w
  1403  07C4  1D03               	btfss	3,2
  1404  07C5  07BC               	addwf	___ftmul@f3_as_product+1,f
  1405  07C6  0835               	movf	___ftmul@f2+2,w
  1406  07C7  1103               	clrz
  1407  07C8  1803               	skipnc
  1408  07C9  0A35               	incf	___ftmul@f2+2,w
  1409  07CA  1D03               	btfss	3,2
  1410  07CB  07BD               	addwf	___ftmul@f3_as_product+2,f
  1411  07CC                     l1041:	
  1412  07CC  3001               	movlw	1
  1413  07CD                     u1075:	
  1414  07CD  1003               	clrc
  1415  07CE  0CB2               	rrf	___ftmul@f1+2,f
  1416  07CF  0CB1               	rrf	___ftmul@f1+1,f
  1417  07D0  0CB0               	rrf	___ftmul@f1,f
  1418  07D1  3EFF               	addlw	-1
  1419  07D2  1D03               	skipz
  1420  07D3  2FCD               	goto	u1075
  1421  07D4  3001               	movlw	1
  1422  07D5                     u1085:	
  1423  07D5  1003               	clrc
  1424  07D6  0CBD               	rrf	___ftmul@f3_as_product+2,f
  1425  07D7  0CBC               	rrf	___ftmul@f3_as_product+1,f
  1426  07D8  0CBB               	rrf	___ftmul@f3_as_product,f
  1427  07D9  3EFF               	addlw	-1
  1428  07DA  1D03               	skipz
  1429  07DB  2FD5               	goto	u1085
  1430  07DC  3001               	movlw	1
  1431  07DD  02BE               	subwf	___ftmul@cntr,f
  1432  07DE  1D03               	btfss	3,2
  1433  07DF  2FBC               	goto	l1037
  1434  07E0  083B               	movf	___ftmul@f3_as_product,w
  1435  07E1  00F1               	movwf	___ftpack@arg
  1436  07E2  083C               	movf	___ftmul@f3_as_product+1,w
  1437  07E3  00F2               	movwf	___ftpack@arg+1
  1438  07E4  083D               	movf	___ftmul@f3_as_product+2,w
  1439  07E5  00F3               	movwf	___ftpack@arg+2
  1440  07E6  083A               	movf	___ftmul@exp,w
  1441  07E7  00B6               	movwf	??___ftmul
  1442  07E8  0836               	movf	??___ftmul,w
  1443  07E9  00F4               	movwf	___ftpack@exp
  1444  07EA  083F               	movf	___ftmul@sign,w
  1445  07EB  00B7               	movwf	??___ftmul+1
  1446  07EC  0837               	movf	??___ftmul+1,w
  1447  07ED  00F5               	movwf	___ftpack@sign
  1448  07EE  120A  118A  24F1   	fcall	___ftpack
  1449  07F1  0871               	movf	?___ftpack,w
  1450  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  1451  07F3  1303               	bcf	3,6	;RP1=0, select bank0
  1452  07F4  00B0               	movwf	?___ftmul
  1453  07F5  0872               	movf	?___ftpack+1,w
  1454  07F6  00B1               	movwf	?___ftmul+1
  1455  07F7  0873               	movf	?___ftpack+2,w
  1456  07F8  00B2               	movwf	?___ftmul+2
  1457  07F9  0008               	return
  1458  07FA                     __end_of___ftmul:	
  1459                           
  1460                           	psect	text8
  1461  066F                     __ptext8:	
  1462 ;; *************** function ___ftdiv *****************
  1463 ;; Defined at:
  1464 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  f2              3    0[BANK0 ] float 
  1467 ;;  f1              3    3[BANK0 ] float 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  f3              3   11[BANK0 ] float 
  1470 ;;  sign            1   15[BANK0 ] unsigned char 
  1471 ;;  exp             1   14[BANK0 ] unsigned char 
  1472 ;;  cntr            1   10[BANK0 ] unsigned char 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  3    0[BANK0 ] float 
  1475 ;; Registers used:
  1476 ;;		wreg, status,2, status,0, pclath, cstack
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1482 ;;      Params:         0       6       0       0       0
  1483 ;;      Locals:         0       6       0       0       0
  1484 ;;      Temps:          0       4       0       0       0
  1485 ;;      Totals:         0      16       0       0       0
  1486 ;;Total ram usage:       16 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; Hardware stack levels required when called:    1
  1489 ;; This function calls:
  1490 ;;		___ftpack
  1491 ;; This function is called by:
  1492 ;;		_main
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           
  1497                           ;psect for function ___ftdiv
  1498  066F                     ___ftdiv:	
  1499                           
  1500                           ;incstack = 0
  1501                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1502  066F  1283               	bcf	3,5	;RP0=0, select bank0
  1503  0670  1303               	bcf	3,6	;RP1=0, select bank0
  1504  0671  0823               	movf	___ftdiv@f1,w
  1505  0672  00A6               	movwf	??___ftdiv
  1506  0673  0824               	movf	___ftdiv@f1+1,w
  1507  0674  00A7               	movwf	??___ftdiv+1
  1508  0675  0825               	movf	___ftdiv@f1+2,w
  1509  0676  00A8               	movwf	??___ftdiv+2
  1510  0677  1003               	clrc
  1511  0678  0D27               	rlf	??___ftdiv+1,w
  1512  0679  0D28               	rlf	??___ftdiv+2,w
  1513  067A  00A9               	movwf	??___ftdiv+3
  1514  067B  0829               	movf	??___ftdiv+3,w
  1515  067C  00AE               	movwf	___ftdiv@exp
  1516  067D  082E               	movf	___ftdiv@exp,w
  1517  067E  1D03               	btfss	3,2
  1518  067F  2E87               	goto	l965
  1519  0680  3000               	movlw	0
  1520  0681  00A0               	movwf	?___ftdiv
  1521  0682  3000               	movlw	0
  1522  0683  00A1               	movwf	?___ftdiv+1
  1523  0684  3000               	movlw	0
  1524  0685  00A2               	movwf	?___ftdiv+2
  1525  0686  0008               	return
  1526  0687                     l965:	
  1527  0687  0820               	movf	___ftdiv@f2,w
  1528  0688  00A6               	movwf	??___ftdiv
  1529  0689  0821               	movf	___ftdiv@f2+1,w
  1530  068A  00A7               	movwf	??___ftdiv+1
  1531  068B  0822               	movf	___ftdiv@f2+2,w
  1532  068C  00A8               	movwf	??___ftdiv+2
  1533  068D  1003               	clrc
  1534  068E  0D27               	rlf	??___ftdiv+1,w
  1535  068F  0D28               	rlf	??___ftdiv+2,w
  1536  0690  00A9               	movwf	??___ftdiv+3
  1537  0691  0829               	movf	??___ftdiv+3,w
  1538  0692  00AF               	movwf	___ftdiv@sign
  1539  0693  082F               	movf	___ftdiv@sign,w
  1540  0694  1D03               	btfss	3,2
  1541  0695  2E9D               	goto	l971
  1542  0696  3000               	movlw	0
  1543  0697  00A0               	movwf	?___ftdiv
  1544  0698  3000               	movlw	0
  1545  0699  00A1               	movwf	?___ftdiv+1
  1546  069A  3000               	movlw	0
  1547  069B  00A2               	movwf	?___ftdiv+2
  1548  069C  0008               	return
  1549  069D                     l971:	
  1550  069D  3000               	movlw	0
  1551  069E  00AB               	movwf	___ftdiv@f3
  1552  069F  3000               	movlw	0
  1553  06A0  00AC               	movwf	___ftdiv@f3+1
  1554  06A1  3000               	movlw	0
  1555  06A2  00AD               	movwf	___ftdiv@f3+2
  1556  06A3  3089               	movlw	137
  1557  06A4  072F               	addwf	___ftdiv@sign,w
  1558  06A5  00A6               	movwf	??___ftdiv
  1559  06A6  0826               	movf	??___ftdiv,w
  1560  06A7  02AE               	subwf	___ftdiv@exp,f
  1561  06A8  0823               	movf	___ftdiv@f1,w
  1562  06A9  00A6               	movwf	??___ftdiv
  1563  06AA  0824               	movf	___ftdiv@f1+1,w
  1564  06AB  00A7               	movwf	??___ftdiv+1
  1565  06AC  0825               	movf	___ftdiv@f1+2,w
  1566  06AD  00A8               	movwf	??___ftdiv+2
  1567  06AE  3010               	movlw	16
  1568  06AF                     u905:	
  1569  06AF  1003               	clrc
  1570  06B0  0CA8               	rrf	??___ftdiv+2,f
  1571  06B1  0CA7               	rrf	??___ftdiv+1,f
  1572  06B2  0CA6               	rrf	??___ftdiv,f
  1573  06B3  3EFF               	addlw	-1
  1574  06B4  1D03               	skipz
  1575  06B5  2EAF               	goto	u905
  1576  06B6  0826               	movf	??___ftdiv,w
  1577  06B7  00A9               	movwf	??___ftdiv+3
  1578  06B8  0829               	movf	??___ftdiv+3,w
  1579  06B9  00AF               	movwf	___ftdiv@sign
  1580  06BA  0820               	movf	___ftdiv@f2,w
  1581  06BB  00A6               	movwf	??___ftdiv
  1582  06BC  0821               	movf	___ftdiv@f2+1,w
  1583  06BD  00A7               	movwf	??___ftdiv+1
  1584  06BE  0822               	movf	___ftdiv@f2+2,w
  1585  06BF  00A8               	movwf	??___ftdiv+2
  1586  06C0  3010               	movlw	16
  1587  06C1                     u915:	
  1588  06C1  1003               	clrc
  1589  06C2  0CA8               	rrf	??___ftdiv+2,f
  1590  06C3  0CA7               	rrf	??___ftdiv+1,f
  1591  06C4  0CA6               	rrf	??___ftdiv,f
  1592  06C5  3EFF               	addlw	-1
  1593  06C6  1D03               	skipz
  1594  06C7  2EC1               	goto	u915
  1595  06C8  0826               	movf	??___ftdiv,w
  1596  06C9  00A9               	movwf	??___ftdiv+3
  1597  06CA  0829               	movf	??___ftdiv+3,w
  1598  06CB  06AF               	xorwf	___ftdiv@sign,f
  1599  06CC  3080               	movlw	128
  1600  06CD  00A6               	movwf	??___ftdiv
  1601  06CE  0826               	movf	??___ftdiv,w
  1602  06CF  05AF               	andwf	___ftdiv@sign,f
  1603  06D0  17A4               	bsf	___ftdiv@f1+1,7
  1604  06D1  30FF               	movlw	255
  1605  06D2  05A3               	andwf	___ftdiv@f1,f
  1606  06D3  30FF               	movlw	255
  1607  06D4  05A4               	andwf	___ftdiv@f1+1,f
  1608  06D5  3000               	movlw	0
  1609  06D6  05A5               	andwf	___ftdiv@f1+2,f
  1610  06D7  17A1               	bsf	___ftdiv@f2+1,7
  1611  06D8  30FF               	movlw	255
  1612  06D9  05A0               	andwf	___ftdiv@f2,f
  1613  06DA  30FF               	movlw	255
  1614  06DB  05A1               	andwf	___ftdiv@f2+1,f
  1615  06DC  3000               	movlw	0
  1616  06DD  05A2               	andwf	___ftdiv@f2+2,f
  1617  06DE  3018               	movlw	24
  1618  06DF  00A6               	movwf	??___ftdiv
  1619  06E0  0826               	movf	??___ftdiv,w
  1620  06E1  00AA               	movwf	___ftdiv@cntr
  1621  06E2                     l985:	
  1622  06E2  3001               	movlw	1
  1623  06E3                     u925:	
  1624  06E3  1003               	clrc
  1625  06E4  0DAB               	rlf	___ftdiv@f3,f
  1626  06E5  0DAC               	rlf	___ftdiv@f3+1,f
  1627  06E6  0DAD               	rlf	___ftdiv@f3+2,f
  1628  06E7  3EFF               	addlw	-1
  1629  06E8  1D03               	skipz
  1630  06E9  2EE3               	goto	u925
  1631  06EA  0822               	movf	___ftdiv@f2+2,w
  1632  06EB  0225               	subwf	___ftdiv@f1+2,w
  1633  06EC  1D03               	skipz
  1634  06ED  2EF4               	goto	u935
  1635  06EE  0821               	movf	___ftdiv@f2+1,w
  1636  06EF  0224               	subwf	___ftdiv@f1+1,w
  1637  06F0  1D03               	skipz
  1638  06F1  2EF4               	goto	u935
  1639  06F2  0820               	movf	___ftdiv@f2,w
  1640  06F3  0223               	subwf	___ftdiv@f1,w
  1641  06F4                     u935:	
  1642  06F4  1C03               	skipc
  1643  06F5  2F01               	goto	l993
  1644  06F6  0820               	movf	___ftdiv@f2,w
  1645  06F7  02A3               	subwf	___ftdiv@f1,f
  1646  06F8  0821               	movf	___ftdiv@f2+1,w
  1647  06F9  1C03               	skipc
  1648  06FA  0F21               	incfsz	___ftdiv@f2+1,w
  1649  06FB  02A4               	subwf	___ftdiv@f1+1,f
  1650  06FC  0822               	movf	___ftdiv@f2+2,w
  1651  06FD  1C03               	skipc
  1652  06FE  0A22               	incf	___ftdiv@f2+2,w
  1653  06FF  02A5               	subwf	___ftdiv@f1+2,f
  1654  0700  142B               	bsf	___ftdiv@f3,0
  1655  0701                     l993:	
  1656  0701  3001               	movlw	1
  1657  0702                     u945:	
  1658  0702  1003               	clrc
  1659  0703  0DA3               	rlf	___ftdiv@f1,f
  1660  0704  0DA4               	rlf	___ftdiv@f1+1,f
  1661  0705  0DA5               	rlf	___ftdiv@f1+2,f
  1662  0706  3EFF               	addlw	-1
  1663  0707  1D03               	skipz
  1664  0708  2F02               	goto	u945
  1665  0709  3001               	movlw	1
  1666  070A  02AA               	subwf	___ftdiv@cntr,f
  1667  070B  1D03               	btfss	3,2
  1668  070C  2EE2               	goto	l985
  1669  070D  082B               	movf	___ftdiv@f3,w
  1670  070E  00F1               	movwf	___ftpack@arg
  1671  070F  082C               	movf	___ftdiv@f3+1,w
  1672  0710  00F2               	movwf	___ftpack@arg+1
  1673  0711  082D               	movf	___ftdiv@f3+2,w
  1674  0712  00F3               	movwf	___ftpack@arg+2
  1675  0713  082E               	movf	___ftdiv@exp,w
  1676  0714  00A6               	movwf	??___ftdiv
  1677  0715  0826               	movf	??___ftdiv,w
  1678  0716  00F4               	movwf	___ftpack@exp
  1679  0717  082F               	movf	___ftdiv@sign,w
  1680  0718  00A7               	movwf	??___ftdiv+1
  1681  0719  0827               	movf	??___ftdiv+1,w
  1682  071A  00F5               	movwf	___ftpack@sign
  1683  071B  120A  118A  24F1   	fcall	___ftpack
  1684  071E  0871               	movf	?___ftpack,w
  1685  071F  1283               	bcf	3,5	;RP0=0, select bank0
  1686  0720  1303               	bcf	3,6	;RP1=0, select bank0
  1687  0721  00A0               	movwf	?___ftdiv
  1688  0722  0872               	movf	?___ftpack+1,w
  1689  0723  00A1               	movwf	?___ftdiv+1
  1690  0724  0873               	movf	?___ftpack+2,w
  1691  0725  00A2               	movwf	?___ftdiv+2
  1692  0726  0008               	return
  1693  0727                     __end_of___ftdiv:	
  1694                           
  1695                           	psect	text9
  1696  04F1                     __ptext9:	
  1697 ;; *************** function ___ftpack *****************
  1698 ;; Defined at:
  1699 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  arg             3    0[COMMON] unsigned um
  1702 ;;  exp             1    3[COMMON] unsigned char 
  1703 ;;  sign            1    4[COMMON] unsigned char 
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  3    0[COMMON] float 
  1708 ;; Registers used:
  1709 ;;		wreg, status,2, status,0
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1715 ;;      Params:         5       0       0       0       0
  1716 ;;      Locals:         0       0       0       0       0
  1717 ;;      Temps:          3       0       0       0       0
  1718 ;;      Totals:         8       0       0       0       0
  1719 ;;Total ram usage:        8 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; This function calls:
  1722 ;;		Nothing
  1723 ;; This function is called by:
  1724 ;;		___ftdiv
  1725 ;;		___ftmul
  1726 ;;		___lwtoft
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           
  1731                           ;psect for function ___ftpack
  1732  04F1                     ___ftpack:	
  1733                           
  1734                           ;incstack = 0
  1735                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1736  04F1  0874               	movf	___ftpack@exp,w
  1737  04F2  1903               	btfsc	3,2
  1738  04F3  2CF9               	goto	l865
  1739  04F4  0873               	movf	___ftpack@arg+2,w
  1740  04F5  0472               	iorwf	___ftpack@arg+1,w
  1741  04F6  0471               	iorwf	___ftpack@arg,w
  1742  04F7  1D03               	skipz
  1743  04F8  2D0C               	goto	l871
  1744  04F9                     l865:	
  1745  04F9  3000               	movlw	0
  1746  04FA  00F1               	movwf	?___ftpack
  1747  04FB  3000               	movlw	0
  1748  04FC  00F2               	movwf	?___ftpack+1
  1749  04FD  3000               	movlw	0
  1750  04FE  00F3               	movwf	?___ftpack+2
  1751  04FF  0008               	return
  1752  0500                     l869:	
  1753  0500  3001               	movlw	1
  1754  0501  00F6               	movwf	??___ftpack
  1755  0502  0876               	movf	??___ftpack,w
  1756  0503  07F4               	addwf	___ftpack@exp,f
  1757  0504  3001               	movlw	1
  1758  0505                     u655:	
  1759  0505  1003               	clrc
  1760  0506  0CF3               	rrf	___ftpack@arg+2,f
  1761  0507  0CF2               	rrf	___ftpack@arg+1,f
  1762  0508  0CF1               	rrf	___ftpack@arg,f
  1763  0509  3EFF               	addlw	-1
  1764  050A  1D03               	skipz
  1765  050B  2D05               	goto	u655
  1766  050C                     l871:	
  1767  050C  30FE               	movlw	254
  1768  050D  0573               	andwf	___ftpack@arg+2,w
  1769  050E  1903               	btfsc	3,2
  1770  050F  2D27               	goto	l368
  1771  0510  2D00               	goto	l869
  1772  0511                     l873:	
  1773  0511  3001               	movlw	1
  1774  0512  00F6               	movwf	??___ftpack
  1775  0513  0876               	movf	??___ftpack,w
  1776  0514  07F4               	addwf	___ftpack@exp,f
  1777  0515  3001               	movlw	1
  1778  0516  07F1               	addwf	___ftpack@arg,f
  1779  0517  3000               	movlw	0
  1780  0518  1803               	skipnc
  1781  0519  3001               	movlw	1
  1782  051A  07F2               	addwf	___ftpack@arg+1,f
  1783  051B  3000               	movlw	0
  1784  051C  1803               	skipnc
  1785  051D  3001               	movlw	1
  1786  051E  07F3               	addwf	___ftpack@arg+2,f
  1787  051F  3001               	movlw	1
  1788  0520                     u675:	
  1789  0520  1003               	clrc
  1790  0521  0CF3               	rrf	___ftpack@arg+2,f
  1791  0522  0CF2               	rrf	___ftpack@arg+1,f
  1792  0523  0CF1               	rrf	___ftpack@arg,f
  1793  0524  3EFF               	addlw	-1
  1794  0525  1D03               	skipz
  1795  0526  2D20               	goto	u675
  1796  0527                     l368:	
  1797  0527  30FF               	movlw	255
  1798  0528  0573               	andwf	___ftpack@arg+2,w
  1799  0529  1903               	btfsc	3,2
  1800  052A  2D36               	goto	l881
  1801  052B  2D11               	goto	l873
  1802  052C                     l879:	
  1803  052C  3001               	movlw	1
  1804  052D  02F4               	subwf	___ftpack@exp,f
  1805  052E  3001               	movlw	1
  1806  052F                     u695:	
  1807  052F  1003               	clrc
  1808  0530  0DF1               	rlf	___ftpack@arg,f
  1809  0531  0DF2               	rlf	___ftpack@arg+1,f
  1810  0532  0DF3               	rlf	___ftpack@arg+2,f
  1811  0533  3EFF               	addlw	-1
  1812  0534  1D03               	skipz
  1813  0535  2D2F               	goto	u695
  1814  0536                     l881:	
  1815  0536  1BF2               	btfsc	___ftpack@arg+1,7
  1816  0537  2D3C               	goto	l375
  1817  0538  3002               	movlw	2
  1818  0539  0274               	subwf	___ftpack@exp,w
  1819  053A  1803               	skipnc
  1820  053B  2D2C               	goto	l879
  1821  053C                     l375:	
  1822  053C  1874               	btfsc	___ftpack@exp,0
  1823  053D  2D44               	goto	l376
  1824  053E  30FF               	movlw	255
  1825  053F  05F1               	andwf	___ftpack@arg,f
  1826  0540  307F               	movlw	127
  1827  0541  05F2               	andwf	___ftpack@arg+1,f
  1828  0542  30FF               	movlw	255
  1829  0543  05F3               	andwf	___ftpack@arg+2,f
  1830  0544                     l376:	
  1831  0544  1003               	clrc
  1832  0545  0CF4               	rrf	___ftpack@exp,f
  1833  0546  0874               	movf	___ftpack@exp,w
  1834  0547  00F6               	movwf	??___ftpack
  1835  0548  01F7               	clrf	??___ftpack+1
  1836  0549  01F8               	clrf	??___ftpack+2
  1837  054A  3010               	movlw	16
  1838  054B                     u735:	
  1839  054B  1003               	clrc
  1840  054C  0DF6               	rlf	??___ftpack,f
  1841  054D  0DF7               	rlf	??___ftpack+1,f
  1842  054E  0DF8               	rlf	??___ftpack+2,f
  1843  054F  3EFF               	addlw	-1
  1844  0550  1D03               	skipz
  1845  0551  2D4B               	goto	u735
  1846  0552  0876               	movf	??___ftpack,w
  1847  0553  04F1               	iorwf	___ftpack@arg,f
  1848  0554  0877               	movf	??___ftpack+1,w
  1849  0555  04F2               	iorwf	___ftpack@arg+1,f
  1850  0556  0878               	movf	??___ftpack+2,w
  1851  0557  04F3               	iorwf	___ftpack@arg+2,f
  1852  0558  0875               	movf	___ftpack@sign,w
  1853  0559  1903               	btfsc	3,2
  1854  055A  0008               	return
  1855  055B  17F3               	bsf	___ftpack@arg+2,7
  1856  055C  0008               	return
  1857  055D                     __end_of___ftpack:	
  1858                           
  1859                           	psect	text10
  1860  03E1                     __ptext10:	
  1861 ;; *************** function _PWM2_Start *****************
  1862 ;; Defined at:
  1863 ;;		line 68 in file "pwm.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;		None
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;		None
  1868 ;; Return value:  Size  Location     Type
  1869 ;;		None               void
  1870 ;; Registers used:
  1871 ;;		None
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1877 ;;      Params:         0       0       0       0       0
  1878 ;;      Locals:         0       0       0       0       0
  1879 ;;      Temps:          0       0       0       0       0
  1880 ;;      Totals:         0       0       0       0       0
  1881 ;;Total ram usage:        0 bytes
  1882 ;; Hardware stack levels used:    1
  1883 ;; This function calls:
  1884 ;;		Nothing
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           
  1891                           ;psect for function _PWM2_Start
  1892  03E1                     _PWM2_Start:	
  1893                           
  1894                           ;pwm.c: 69: CCP2M3 = 1;
  1895                           
  1896                           ;incstack = 0
  1897                           ; Regs used in _PWM2_Start: []
  1898  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  1899  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  1900  03E3  159D               	bsf	29,3	;volatile
  1901                           
  1902                           ;pwm.c: 70: CCP2M2 = 1;
  1903  03E4  151D               	bsf	29,2	;volatile
  1904                           
  1905                           ;pwm.c: 75: T2CKPS0 = 1;
  1906  03E5  1412               	bsf	18,0	;volatile
  1907                           
  1908                           ;pwm.c: 76: T2CKPS1 = 0;
  1909  03E6  1092               	bcf	18,1	;volatile
  1910                           
  1911                           ;pwm.c: 81: TMR2ON = 1;
  1912  03E7  1512               	bsf	18,2	;volatile
  1913                           
  1914                           ;pwm.c: 82: TRISC1 = 0;
  1915  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  1916  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  1917  03EA  1087               	bcf	7,1	;volatile
  1918  03EB  0008               	return
  1919  03EC                     __end_of_PWM2_Start:	
  1920                           
  1921                           	psect	text11
  1922  0452                     __ptext11:	
  1923 ;; *************** function _PWM2_Init *****************
  1924 ;; Defined at:
  1925 ;;		line 19 in file "pwm.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  fre             4    5[BANK0 ] unsigned long 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;		None
  1930 ;; Return value:  Size  Location     Type
  1931 ;;		None               void
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0, pclath, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1939 ;;      Params:         0       4       0       0       0
  1940 ;;      Locals:         0       0       0       0       0
  1941 ;;      Temps:          4       0       0       0       0
  1942 ;;      Totals:         4       4       0       0       0
  1943 ;;Total ram usage:        8 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; Hardware stack levels required when called:    1
  1946 ;; This function calls:
  1947 ;;		___lldiv
  1948 ;; This function is called by:
  1949 ;;		_main
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           
  1954                           ;psect for function _PWM2_Init
  1955  0452                     _PWM2_Init:	
  1956                           
  1957                           ;pwm.c: 20: PR2 = (4000000 / (fre * 4 * 4)) - 1;
  1958                           
  1959                           ;incstack = 0
  1960                           ; Regs used in _PWM2_Init: [wreg+status,2+status,0+pclath+cstack]
  1961  0452  1283               	bcf	3,5	;RP0=0, select bank0
  1962  0453  1303               	bcf	3,6	;RP1=0, select bank0
  1963  0454  0825               	movf	PWM2_Init@fre,w
  1964  0455  00FA               	movwf	??_PWM2_Init
  1965  0456  0826               	movf	PWM2_Init@fre+1,w
  1966  0457  00FB               	movwf	??_PWM2_Init+1
  1967  0458  0827               	movf	PWM2_Init@fre+2,w
  1968  0459  00FC               	movwf	??_PWM2_Init+2
  1969  045A  0828               	movf	PWM2_Init@fre+3,w
  1970  045B  00FD               	movwf	??_PWM2_Init+3
  1971  045C  3002               	movlw	2
  1972  045D                     u825:	
  1973  045D  1003               	clrc
  1974  045E  0DFA               	rlf	??_PWM2_Init,f
  1975  045F  0DFB               	rlf	??_PWM2_Init+1,f
  1976  0460  0DFC               	rlf	??_PWM2_Init+2,f
  1977  0461  0DFD               	rlf	??_PWM2_Init+3,f
  1978  0462  3EFF               	addlw	-1
  1979  0463  1D03               	skipz
  1980  0464  2C5D               	goto	u825
  1981  0465  3002               	movlw	2
  1982  0466                     u835:	
  1983  0466  1003               	clrc
  1984  0467  0DFA               	rlf	??_PWM2_Init,f
  1985  0468  0DFB               	rlf	??_PWM2_Init+1,f
  1986  0469  0DFC               	rlf	??_PWM2_Init+2,f
  1987  046A  0DFD               	rlf	??_PWM2_Init+3,f
  1988  046B  3EFF               	addlw	-1
  1989  046C  1D03               	skipz
  1990  046D  2C66               	goto	u835
  1991  046E  087D               	movf	??_PWM2_Init+3,w
  1992  046F  00F4               	movwf	___lldiv@divisor+3
  1993  0470  087C               	movf	??_PWM2_Init+2,w
  1994  0471  00F3               	movwf	___lldiv@divisor+2
  1995  0472  087B               	movf	??_PWM2_Init+1,w
  1996  0473  00F2               	movwf	___lldiv@divisor+1
  1997  0474  087A               	movf	??_PWM2_Init,w
  1998  0475  00F1               	movwf	___lldiv@divisor
  1999  0476  3000               	movlw	0
  2000  0477  00F8               	movwf	___lldiv@dividend+3
  2001  0478  303D               	movlw	61
  2002  0479  00F7               	movwf	___lldiv@dividend+2
  2003  047A  3009               	movlw	9
  2004  047B  00F6               	movwf	___lldiv@dividend+1
  2005  047C  3000               	movlw	0
  2006  047D  00F5               	movwf	___lldiv@dividend
  2007  047E  120A  118A  2491   	fcall	___lldiv
  2008  0481  0871               	movf	?___lldiv,w
  2009  0482  3EFF               	addlw	255
  2010  0483  1683               	bsf	3,5	;RP0=1, select bank1
  2011  0484  1303               	bcf	3,6	;RP1=0, select bank1
  2012  0485  0092               	movwf	18	;volatile
  2013                           
  2014                           ;pwm.c: 21: freq = fre;
  2015  0486  1283               	bcf	3,5	;RP0=0, select bank0
  2016  0487  1303               	bcf	3,6	;RP1=0, select bank0
  2017  0488  0828               	movf	PWM2_Init@fre+3,w
  2018  0489  00D5               	movwf	_freq+3
  2019  048A  0827               	movf	PWM2_Init@fre+2,w
  2020  048B  00D4               	movwf	_freq+2
  2021  048C  0826               	movf	PWM2_Init@fre+1,w
  2022  048D  00D3               	movwf	_freq+1
  2023  048E  0825               	movf	PWM2_Init@fre,w
  2024  048F  00D2               	movwf	_freq
  2025  0490  0008               	return
  2026  0491                     __end_of_PWM2_Init:	
  2027                           
  2028                           	psect	text12
  2029  0491                     __ptext12:	
  2030 ;; *************** function ___lldiv *****************
  2031 ;; Defined at:
  2032 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  divisor         4    0[COMMON] unsigned long 
  2035 ;;  dividend        4    4[COMMON] unsigned long 
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;  quotient        4    0[BANK0 ] unsigned long 
  2038 ;;  counter         1    4[BANK0 ] unsigned char 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  4    0[COMMON] unsigned long 
  2041 ;; Registers used:
  2042 ;;		wreg, status,2, status,0
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2048 ;;      Params:         8       0       0       0       0
  2049 ;;      Locals:         0       5       0       0       0
  2050 ;;      Temps:          1       0       0       0       0
  2051 ;;      Totals:         9       5       0       0       0
  2052 ;;Total ram usage:       14 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; This function calls:
  2055 ;;		Nothing
  2056 ;; This function is called by:
  2057 ;;		_PWM2_Init
  2058 ;;		_PWM1_Init
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           
  2063                           ;psect for function ___lldiv
  2064  0491                     ___lldiv:	
  2065                           
  2066                           ;incstack = 0
  2067                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2068  0491  3000               	movlw	0
  2069  0492  1283               	bcf	3,5	;RP0=0, select bank0
  2070  0493  1303               	bcf	3,6	;RP1=0, select bank0
  2071  0494  00A3               	movwf	___lldiv@quotient+3
  2072  0495  3000               	movlw	0
  2073  0496  00A2               	movwf	___lldiv@quotient+2
  2074  0497  3000               	movlw	0
  2075  0498  00A1               	movwf	___lldiv@quotient+1
  2076  0499  3000               	movlw	0
  2077  049A  00A0               	movwf	___lldiv@quotient
  2078  049B  0874               	movf	___lldiv@divisor+3,w
  2079  049C  0473               	iorwf	___lldiv@divisor+2,w
  2080  049D  0472               	iorwf	___lldiv@divisor+1,w
  2081  049E  0471               	iorwf	___lldiv@divisor,w
  2082  049F  1903               	skipnz
  2083  04A0  2CE8               	goto	l913
  2084  04A1  01A4               	clrf	___lldiv@counter
  2085  04A2  0AA4               	incf	___lldiv@counter,f
  2086  04A3                     l899:	
  2087  04A3  1BF4               	btfsc	___lldiv@divisor+3,7
  2088  04A4  2CB3               	goto	l901
  2089  04A5  3001               	movlw	1
  2090  04A6  00F9               	movwf	??___lldiv
  2091  04A7                     u765:	
  2092  04A7  1003               	clrc
  2093  04A8  0DF1               	rlf	___lldiv@divisor,f
  2094  04A9  0DF2               	rlf	___lldiv@divisor+1,f
  2095  04AA  0DF3               	rlf	___lldiv@divisor+2,f
  2096  04AB  0DF4               	rlf	___lldiv@divisor+3,f
  2097  04AC  0BF9               	decfsz	??___lldiv,f
  2098  04AD  2CA7               	goto	u765
  2099  04AE  3001               	movlw	1
  2100  04AF  00F9               	movwf	??___lldiv
  2101  04B0  0879               	movf	??___lldiv,w
  2102  04B1  07A4               	addwf	___lldiv@counter,f
  2103  04B2  2CA3               	goto	l899
  2104  04B3                     l901:	
  2105  04B3  3001               	movlw	1
  2106  04B4  00F9               	movwf	??___lldiv
  2107  04B5                     u785:	
  2108  04B5  1003               	clrc
  2109  04B6  0DA0               	rlf	___lldiv@quotient,f
  2110  04B7  0DA1               	rlf	___lldiv@quotient+1,f
  2111  04B8  0DA2               	rlf	___lldiv@quotient+2,f
  2112  04B9  0DA3               	rlf	___lldiv@quotient+3,f
  2113  04BA  0BF9               	decfsz	??___lldiv,f
  2114  04BB  2CB5               	goto	u785
  2115  04BC  0874               	movf	___lldiv@divisor+3,w
  2116  04BD  0278               	subwf	___lldiv@dividend+3,w
  2117  04BE  1D03               	skipz
  2118  04BF  2CCA               	goto	u795
  2119  04C0  0873               	movf	___lldiv@divisor+2,w
  2120  04C1  0277               	subwf	___lldiv@dividend+2,w
  2121  04C2  1D03               	skipz
  2122  04C3  2CCA               	goto	u795
  2123  04C4  0872               	movf	___lldiv@divisor+1,w
  2124  04C5  0276               	subwf	___lldiv@dividend+1,w
  2125  04C6  1D03               	skipz
  2126  04C7  2CCA               	goto	u795
  2127  04C8  0871               	movf	___lldiv@divisor,w
  2128  04C9  0275               	subwf	___lldiv@dividend,w
  2129  04CA                     u795:	
  2130  04CA  1C03               	skipc
  2131  04CB  2CDB               	goto	l909
  2132  04CC  0871               	movf	___lldiv@divisor,w
  2133  04CD  02F5               	subwf	___lldiv@dividend,f
  2134  04CE  0872               	movf	___lldiv@divisor+1,w
  2135  04CF  1C03               	skipc
  2136  04D0  0F72               	incfsz	___lldiv@divisor+1,w
  2137  04D1  02F6               	subwf	___lldiv@dividend+1,f
  2138  04D2  0873               	movf	___lldiv@divisor+2,w
  2139  04D3  1C03               	skipc
  2140  04D4  0F73               	incfsz	___lldiv@divisor+2,w
  2141  04D5  02F7               	subwf	___lldiv@dividend+2,f
  2142  04D6  0874               	movf	___lldiv@divisor+3,w
  2143  04D7  1C03               	skipc
  2144  04D8  0F74               	incfsz	___lldiv@divisor+3,w
  2145  04D9  02F8               	subwf	___lldiv@dividend+3,f
  2146  04DA  1420               	bsf	___lldiv@quotient,0
  2147  04DB                     l909:	
  2148  04DB  3001               	movlw	1
  2149  04DC                     u805:	
  2150  04DC  1003               	clrc
  2151  04DD  0CF4               	rrf	___lldiv@divisor+3,f
  2152  04DE  0CF3               	rrf	___lldiv@divisor+2,f
  2153  04DF  0CF2               	rrf	___lldiv@divisor+1,f
  2154  04E0  0CF1               	rrf	___lldiv@divisor,f
  2155  04E1  3EFF               	addlw	-1
  2156  04E2  1D03               	skipz
  2157  04E3  2CDC               	goto	u805
  2158  04E4  3001               	movlw	1
  2159  04E5  02A4               	subwf	___lldiv@counter,f
  2160  04E6  1D03               	btfss	3,2
  2161  04E7  2CB3               	goto	l901
  2162  04E8                     l913:	
  2163  04E8  0823               	movf	___lldiv@quotient+3,w
  2164  04E9  00F4               	movwf	?___lldiv+3
  2165  04EA  0822               	movf	___lldiv@quotient+2,w
  2166  04EB  00F3               	movwf	?___lldiv+2
  2167  04EC  0821               	movf	___lldiv@quotient+1,w
  2168  04ED  00F2               	movwf	?___lldiv+1
  2169  04EE  0820               	movf	___lldiv@quotient,w
  2170  04EF  00F1               	movwf	?___lldiv
  2171  04F0  0008               	return
  2172  04F1                     __end_of___lldiv:	
  2173                           
  2174                           	psect	text13
  2175  042E                     __ptext13:	
  2176 ;; *************** function _PWM2_Duty *****************
  2177 ;; Defined at:
  2178 ;;		line 35 in file "pwm.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  duty            2    0[COMMON] unsigned int 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;		None               void
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2192 ;;      Params:         2       0       0       0       0
  2193 ;;      Locals:         0       0       0       0       0
  2194 ;;      Temps:          2       0       0       0       0
  2195 ;;      Totals:         4       0       0       0       0
  2196 ;;Total ram usage:        4 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; This function calls:
  2199 ;;		Nothing
  2200 ;; This function is called by:
  2201 ;;		_main
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           
  2206                           ;psect for function _PWM2_Duty
  2207  042E                     _PWM2_Duty:	
  2208                           
  2209                           ;pwm.c: 36: if (duty > 1023)
  2210                           
  2211                           ;incstack = 0
  2212                           ; Regs used in _PWM2_Duty: [wreg+status,2+status,0]
  2213  042E  3004               	movlw	4
  2214  042F  0272               	subwf	PWM2_Duty@duty+1,w
  2215  0430  3000               	movlw	0
  2216  0431  1903               	skipnz
  2217  0432  0271               	subwf	PWM2_Duty@duty,w
  2218  0433  1C03               	skipc
  2219  0434  2C39               	goto	l941
  2220                           
  2221                           ;pwm.c: 37: duty = 1023;
  2222  0435  30FF               	movlw	255
  2223  0436  00F1               	movwf	PWM2_Duty@duty
  2224  0437  3003               	movlw	3
  2225  0438  00F2               	movwf	PWM2_Duty@duty+1
  2226  0439                     l941:	
  2227                           
  2228                           ;pwm.c: 39: CCP2X = duty & 2;
  2229  0439  1283               	bcf	3,5	;RP0=0, select bank0
  2230  043A  1303               	bcf	3,6	;RP1=0, select bank0
  2231  043B  129D               	bcf	29,5	;volatile
  2232                           
  2233                           ;pwm.c: 40: CCP2Y = duty & 1;
  2234  043C  1C71               	btfss	PWM2_Duty@duty,0
  2235  043D  2C42               	goto	u850
  2236  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2237  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2238  0440  161D               	bsf	29,4	;volatile
  2239  0441  2C45               	goto	l945
  2240  0442                     u850:	
  2241  0442  1283               	bcf	3,5	;RP0=0, select bank0
  2242  0443  1303               	bcf	3,6	;RP1=0, select bank0
  2243  0444  121D               	bcf	29,4	;volatile
  2244  0445                     l945:	
  2245                           
  2246                           ;pwm.c: 41: CCPR2L = duty >> 2;
  2247  0445  0872               	movf	PWM2_Duty@duty+1,w
  2248  0446  00F4               	movwf	??_PWM2_Duty+1
  2249  0447  0871               	movf	PWM2_Duty@duty,w
  2250  0448  00F3               	movwf	??_PWM2_Duty
  2251  0449  1003               	clrc
  2252  044A  0CF4               	rrf	??_PWM2_Duty+1,f
  2253  044B  0CF3               	rrf	??_PWM2_Duty,f
  2254  044C  1003               	clrc
  2255  044D  0CF4               	rrf	??_PWM2_Duty+1,f
  2256  044E  0CF3               	rrf	??_PWM2_Duty,f
  2257  044F  0873               	movf	??_PWM2_Duty,w
  2258  0450  009B               	movwf	27	;volatile
  2259  0451  0008               	return
  2260  0452                     __end_of_PWM2_Duty:	
  2261  007E                     btemp	set	126	;btemp
  2262  007E                     wtemp	set	126
  2263  007E                     wtemp0	set	126
  2264  0080                     wtemp1	set	128
  2265  0082                     wtemp2	set	130
  2266  0084                     wtemp3	set	132
  2267  0086                     wtemp4	set	134
  2268  0088                     wtemp5	set	136
  2269  007F                     wtemp6	set	127
  2270  007E                     ttemp	set	126
  2271  007E                     ttemp0	set	126
  2272  0081                     ttemp1	set	129
  2273  0084                     ttemp2	set	132
  2274  0087                     ttemp3	set	135
  2275  007F                     ttemp4	set	127
  2276  007E                     ltemp	set	126
  2277  007E                     ltemp0	set	126
  2278  0082                     ltemp1	set	130
  2279  0086                     ltemp2	set	134
  2280  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80     50      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            69      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM2_Init
    ___lwtoft->___ftpack
    ___fttol->___lwtoft
    ___ftmul->___lwtoft
    ___ftdiv->___lwtoft
    _PWM2_Init->___lldiv

Critical Paths under _main in BANK0

    _main->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    _PWM2_Init->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    6892
                                             46 BANK0      4     4      0
                          _PWM2_Duty
                          _PWM2_Init
                         _PWM2_Start
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                             _decide
                      _get_adc_value
                         _get_inputs
                           _init_adc
 ---------------------------------------------------------------------------------
 (1) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_inputs                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_adc_value                                        2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _decide                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1743
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     305
                                             32 BANK0     14    10      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2100
                                             16 BANK0     16    10      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2054
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _PWM2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM2_Init                                            8     4      4     471
                                              9 COMMON     4     4      0
                                              5 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     374
                                              0 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _PWM2_Duty                                            4     2      2     173
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM2_Duty
   _PWM2_Init
     ___lldiv
   _PWM2_Start
   ___ftdiv
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _decide
   _get_adc_value
   _get_inputs
   _init_adc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      D       D       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50     32      38       4       70.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BITBANK3            60      0       0       7        0.0%
BANK3               60      0       0       8        0.0%
BANK2               45      0       0       9        0.0%
ABS                  0      0      45      10        0.0%
BITBANK2            45      0       0      11        0.0%
DATA                 0      0      45      12        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Feb 15 22:02:28 2016

            __CFG_CP$OFF 0000                       l48 0402                      l375 053C  
                    l376 0544                      l368 0527                      l459 0655  
                    l901 04B3                      l913 04E8                      l941 0439  
                    l909 04DB                      l871 050C                      l945 0445  
                    l881 0536                      l873 0511                      l865 04F9  
                    l971 069D                      l869 0500                      l965 0687  
                    l879 052C                      l993 0701                      l985 06E2  
                    l899 04A3                      _PR2 0092                      u805 04DC  
                    u735 054B                      u655 0505                      u825 045D  
                    u905 06AF                      u850 0442                      u835 0466  
                    u675 0520                      u915 06C1                      u765 04A7  
                    u925 06E3                      u695 052F                      u935 06F4  
                    u785 04B5                      u945 0702                      u795 04CA  
                    u985 0761                      u995 0773             __CFG_IESO$ON 0000  
           __CFG_FOSC$HS 0000             ___ftdiv@cntr 002A             ___ftdiv@sign 002F  
                   l1013 0755                     l1007 073F                     l1041 07CC  
                   l1025 0794                     l1107 0580                     l1037 07BC  
                   l1029 07A4                     l1057 05FB                     l1083 064A  
                   l1075 062D                     l1085 0658                     l1077 063D  
                   l1089 0666                     u1025 07A5                     u1035 07AD  
                   u1115 0602                     u1145 062E                     u1075 07CD  
                   u1227 03FA                     u1085 07D5                     u1175 064C  
          __CFG_FCMEN$ON 0000          ??_get_adc_value 0073                     _main 055D  
                   _freq 0052             ___ftpack@arg 0071             ___ftpack@exp 0074  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0001                     ttemp 007E                     wtemp 007E  
          __CFG_MCLRE$ON 0000             ___ftmul@cntr 003E             ___ftmul@sign 003F  
           ___fttol@exp1 004D             ___fttol@lval 0049                    ?_main 0071  
                  _CCP1X 00BD                    _CCP1Y 00BC                    _CCP2X 00ED  
                  _CCP2Y 00EC            __CFG_WDTE$OFF 0000          __end_of___ftdiv 0727  
                  _ANSEL 0091          __end_of___lldiv 04F1          __end_of___ftmul 07FA  
        __end_of___fttol 066F                    _PORTD 0008                    _TRISA 0085  
                  _TRISD 0088       __size_of_PWM2_Init 003F       __size_of_PWM2_Duty 0024  
            ?_PWM2_Start 0071            ___ftpack@sign 0075                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F            main@adc_value 004E          __initialization 07FA  
           __end_of_main 05E1                   ??_main 007E            ___fttol@sign1 0048  
                 _CCP1M2 00BA                   _CCP1M3 00BB                   _CCP2M2 00EA  
                 _CCP2M3 00EB                   _ADRESL 009E                   _CCPR1L 0015  
                 _CCPR2L 001B         __end_of___ftpack 055D         __end_of___lwtoft 0419  
                 _TMR2ON 0092                   _TRISC1 0439                   _TRISC2 043A  
         __CFG_PWRTE$OFF 0000        __end_of_PWM2_Init 0491        __end_of_PWM2_Duty 0452  
                 _decide 03EC                ??___ftdiv 0026                ??___lldiv 0079  
    __size_of_PWM2_Start 000B                ??___ftmul 0036                ??___fttol 0044  
       __end_of_init_adc 042E    ___ftmul@f3_as_product 003B  __end_of__initialization 07FC  
             ___ftdiv@f1 0023               ___ftdiv@f2 0020               ___ftdiv@f3 002B  
             ___ftmul@f1 0030               ___ftmul@f2 0033               ___fttol@f1 0040  
         __pcstackCOMMON 0071               ___lwtoft@c 0079               __pbssBANK0 0056  
             __pmaintext 055D                  ?_decide 0071                ?___ftpack 0071  
                _T2CKPS0 0090                  _T2CKPS1 0091                ?___lwtoft 0079  
             _get_inputs 03F8             ??_PWM2_Start 0071                ?_init_adc 0071  
  __end_of_get_adc_value 03E1                  ___ftdiv 066F                  ___lldiv 0491  
                ___ftmul 0727                  ___fttol 05E1          __size_of_decide 000C  
     __end_of_PWM2_Start 03EC               ??___ftpack 0076                  __ptext1 0419  
                __ptext2 03F8                  __ptext3 03DA                  __ptext4 03EC  
                __ptext5 0405                  __ptext6 05E1                  __ptext7 0727  
                __ptext8 066F                  __ptext9 04F1               ??___lwtoft 007C  
   end_of_initialization 07FC               ??_init_adc 0071          ___lldiv@divisor 0071  
        ___lldiv@counter 0024                _PWM2_Init 0452                _PWM2_Duty 042E  
              _TRISBbits 0086              ?_get_inputs 0071              ___ftdiv@exp 002E  
            ___ftmul@exp 003A           __end_of_decide 03F8               ?_PWM2_Init 0025  
             ?_PWM2_Duty 0071      start_initialization 07FA      __size_of_get_inputs 000D  
               ??_decide 0071        __size_of___ftpack 006C                ___latbits 0002  
      __size_of___lwtoft 0014            __pcstackBANK0 0020                __pnvBANK0 0052  
      __size_of_init_adc 0015                 ?___ftdiv 0020                 ?___lldiv 0071  
               ?___ftmul 0030                 ?___fttol 0040              ??_PWM2_Init 007A  
            ??_PWM2_Duty 0073            PWM2_Duty@duty 0071               _ADCON0bits 001F  
             _ADCON1bits 009F   __size_of_get_adc_value 0007             ??_get_inputs 0071  
     __end_of_get_inputs 0405         __size_of___ftdiv 00B8         __size_of___lldiv 0060  
       __size_of___ftmul 00D3         __size_of___fttol 008E                 ___ftpack 04F1  
               ___lwtoft 0405                 __ptext10 03E1                 __ptext11 0452  
               __ptext12 0491                 __ptext13 042E                 _init_adc 0419  
          __size_of_main 0084            _get_adc_value 03DA             PWM2_Init@fre 0025  
               main@duty 0050               _LED_Output 0056         ___lldiv@dividend 0075  
         ?_get_adc_value 0071         ___lldiv@quotient 0020               _PWM2_Start 03E1  
