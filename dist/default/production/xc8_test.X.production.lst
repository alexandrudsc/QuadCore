

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Mar 12 17:21:11 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F917
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	functab,global,reloc=256,class=CODE,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     	;# 
    31  0001                     	;# 
    32  0002                     	;# 
    33  0003                     	;# 
    34  0004                     	;# 
    35  0005                     	;# 
    36  0006                     	;# 
    37  0007                     	;# 
    38  0008                     	;# 
    39  0009                     	;# 
    40  000A                     	;# 
    41  000B                     	;# 
    42  000C                     	;# 
    43  000D                     	;# 
    44  000E                     	;# 
    45  000E                     	;# 
    46  000F                     	;# 
    47  0010                     	;# 
    48  0011                     	;# 
    49  0012                     	;# 
    50  0013                     	;# 
    51  0014                     	;# 
    52  0015                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0017                     	;# 
    56  0018                     	;# 
    57  0019                     	;# 
    58  001A                     	;# 
    59  001B                     	;# 
    60  001B                     	;# 
    61  001C                     	;# 
    62  001D                     	;# 
    63  001E                     	;# 
    64  001F                     	;# 
    65  0081                     	;# 
    66  0085                     	;# 
    67  0086                     	;# 
    68  0087                     	;# 
    69  0088                     	;# 
    70  0089                     	;# 
    71  008C                     	;# 
    72  008D                     	;# 
    73  008E                     	;# 
    74  008F                     	;# 
    75  0090                     	;# 
    76  0091                     	;# 
    77  0092                     	;# 
    78  0093                     	;# 
    79  0094                     	;# 
    80  0095                     	;# 
    81  0095                     	;# 
    82  0096                     	;# 
    83  0096                     	;# 
    84  0097                     	;# 
    85  0098                     	;# 
    86  0099                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009E                     	;# 
    90  009F                     	;# 
    91  0105                     	;# 
    92  0107                     	;# 
    93  0108                     	;# 
    94  0109                     	;# 
    95  010C                     	;# 
    96  010C                     	;# 
    97  010D                     	;# 
    98  010D                     	;# 
    99  010E                     	;# 
   100  010F                     	;# 
   101  0110                     	;# 
   102  0111                     	;# 
   103  0112                     	;# 
   104  0113                     	;# 
   105  0114                     	;# 
   106  0115                     	;# 
   107  0116                     	;# 
   108  0117                     	;# 
   109  0118                     	;# 
   110  0119                     	;# 
   111  011A                     	;# 
   112  011B                     	;# 
   113  011C                     	;# 
   114  011D                     	;# 
   115  011E                     	;# 
   116  018C                     	;# 
   117  018D                     	;# 
   118  0000                     	;# 
   119  0001                     	;# 
   120  0002                     	;# 
   121  0003                     	;# 
   122  0004                     	;# 
   123  0005                     	;# 
   124  0006                     	;# 
   125  0007                     	;# 
   126  0008                     	;# 
   127  0009                     	;# 
   128  000A                     	;# 
   129  000B                     	;# 
   130  000C                     	;# 
   131  000D                     	;# 
   132  000E                     	;# 
   133  000E                     	;# 
   134  000F                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0015                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0017                     	;# 
   144  0018                     	;# 
   145  0019                     	;# 
   146  001A                     	;# 
   147  001B                     	;# 
   148  001B                     	;# 
   149  001C                     	;# 
   150  001D                     	;# 
   151  001E                     	;# 
   152  001F                     	;# 
   153  0081                     	;# 
   154  0085                     	;# 
   155  0086                     	;# 
   156  0087                     	;# 
   157  0088                     	;# 
   158  0089                     	;# 
   159  008C                     	;# 
   160  008D                     	;# 
   161  008E                     	;# 
   162  008F                     	;# 
   163  0090                     	;# 
   164  0091                     	;# 
   165  0092                     	;# 
   166  0093                     	;# 
   167  0094                     	;# 
   168  0095                     	;# 
   169  0095                     	;# 
   170  0096                     	;# 
   171  0096                     	;# 
   172  0097                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  009F                     	;# 
   179  0105                     	;# 
   180  0107                     	;# 
   181  0108                     	;# 
   182  0109                     	;# 
   183  010C                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010D                     	;# 
   187  010E                     	;# 
   188  010F                     	;# 
   189  0110                     	;# 
   190  0111                     	;# 
   191  0112                     	;# 
   192  0113                     	;# 
   193  0114                     	;# 
   194  0115                     	;# 
   195  0116                     	;# 
   196  0117                     	;# 
   197  0118                     	;# 
   198  0119                     	;# 
   199  011A                     	;# 
   200  011B                     	;# 
   201  011C                     	;# 
   202  011D                     	;# 
   203  011E                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0110                     	;# 
   278  0111                     	;# 
   279  0112                     	;# 
   280  0113                     	;# 
   281  0114                     	;# 
   282  0115                     	;# 
   283  0116                     	;# 
   284  0117                     	;# 
   285  0118                     	;# 
   286  0119                     	;# 
   287  011A                     	;# 
   288  011B                     	;# 
   289  011C                     	;# 
   290  011D                     	;# 
   291  011E                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  008F                     	;# 
   339  0090                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0096                     	;# 
   348  0097                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010D                     	;# 
   363  010E                     	;# 
   364  010F                     	;# 
   365  0110                     	;# 
   366  0111                     	;# 
   367  0112                     	;# 
   368  0113                     	;# 
   369  0114                     	;# 
   370  0115                     	;# 
   371  0116                     	;# 
   372  0117                     	;# 
   373  0118                     	;# 
   374  0119                     	;# 
   375  011A                     	;# 
   376  011B                     	;# 
   377  011C                     	;# 
   378  011D                     	;# 
   379  011E                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382                           
   383                           	psect	idataCOMMON
   384  030D                     __pidataCOMMON:	
   385                           
   386                           ;initializer for _direction
   387  030D  3401               	retlw	1
   388                           
   389                           	psect	nvCOMMON
   390  007B                     __pnvCOMMON:	
   391  007B                     _p:	
   392  007B                     	ds	1
   393                           
   394                           	psect	nvBANK0
   395  0042                     __pnvBANK0:	
   396  0042                     _freq:	
   397  0042                     	ds	4
   398  001F                     _ADCON0bits	set	31
   399  001E                     _ADRESH	set	30
   400  0015                     _CCPR1L	set	21
   401  001B                     _CCPR2L	set	27
   402  0008                     _PORTD	set	8
   403  0013                     _SSPBUF	set	19
   404  0014                     _SSPCON	set	20
   405  00BA                     _CCP1M2	set	186
   406  00BB                     _CCP1M3	set	187
   407  00BD                     _CCP1X	set	189
   408  00BC                     _CCP1Y	set	188
   409  00EA                     _CCP2M2	set	234
   410  00EB                     _CCP2M3	set	235
   411  00ED                     _CCP2X	set	237
   412  00EC                     _CCP2Y	set	236
   413  005F                     _GIE	set	95
   414  005E                     _PEIE	set	94
   415  0063                     _SSPIF	set	99
   416  0090                     _T2CKPS0	set	144
   417  0091                     _T2CKPS1	set	145
   418  0092                     _TMR2ON	set	146
   419  009F                     _ADCON1bits	set	159
   420  009E                     _ADRESL	set	158
   421  0091                     _ANSEL	set	145
   422  0092                     _PR2	set	146
   423  0093                     _SSPADD	set	147
   424  0094                     _SSPSTATbits	set	148
   425  0085                     _TRISA	set	133
   426  0086                     _TRISBbits	set	134
   427  0088                     _TRISD	set	136
   428  0463                     _SSPIE	set	1123
   429  0439                     _TRISC1	set	1081
   430  043A                     _TRISC2	set	1082
   431  043E                     _TRISC6	set	1086
   432  043F                     _TRISC7	set	1087
   433                           
   434                           ; #config settings
   435  0000                     
   436                           	psect	cinit
   437  0015                     start_initialization:	
   438  0015                     __initialization:	
   439                           
   440                           ; Clear objects allocated to COMMON
   441  0015  01F9               	clrf	__pbssCOMMON& (0+127)
   442  0016  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   443                           
   444                           ; Clear objects allocated to BANK0
   445  0017  01BC               	clrf	__pbssBANK0& (0+127)
   446  0018  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   447  0019  01BE               	clrf	(__pbssBANK0+2)& (0+127)
   448  001A  01BF               	clrf	(__pbssBANK0+3)& (0+127)
   449  001B  01C0               	clrf	(__pbssBANK0+4)& (0+127)
   450  001C  01C1               	clrf	(__pbssBANK0+5)& (0+127)
   451                           
   452                           ; Initialize objects allocated to COMMON
   453  001D  120A  118A  230D   	fcall	__pidataCOMMON	;fetch initializer
   454  0020  00FC               	movwf	__pdataCOMMON& (0+127)
   455  0021                     end_of_initialization:	
   456                           ;End of C runtime variable initialization code
   457                           
   458  0021                     __end_of__initialization:	
   459  0021  0183               	clrf	3
   460  0022  120A  118A  290A   	ljmp	_main	;jump to C main() function
   461                           
   462                           	psect	bssCOMMON
   463  0079                     __pbssCOMMON:	
   464  0079                     _LED_output:	
   465  0079                     	ds	2
   466                           
   467                           	psect	dataCOMMON
   468  007C                     __pdataCOMMON:	
   469  007C                     _direction:	
   470  007C                     	ds	1
   471                           
   472                           	psect	bssBANK0
   473  003C                     __pbssBANK0:	
   474  003C                     _msg:	
   475  003C                     	ds	4
   476  0040                     _duty:	
   477  0040                     	ds	2
   478                           
   479                           	psect	cstackCOMMON
   480  0070                     __pcstackCOMMON:	
   481  0070                     ?_init_adc:	
   482  0070                     ?_i2c_set_handler:	
   483                           ; 0 bytes @ 0x0
   484                           
   485  0070                     ?_i2c_handler:	
   486                           ; 0 bytes @ 0x0
   487                           
   488  0070                     ?_i2c_init_slave:	
   489                           ; 0 bytes @ 0x0
   490                           
   491  0070                     ?_PWM2_start:	
   492                           ; 0 bytes @ 0x0
   493                           
   494  0070                     ?_main:	
   495                           ; 0 bytes @ 0x0
   496                           
   497  0070                     ?_get_input:	
   498                           ; 0 bytes @ 0x0
   499                           
   500  0070                     ??_i2c_read_byte:	
   501                           ; 0 bytes @ 0x0
   502                           
   503  0070                     ?_msg_resolve:	
   504                           ; 0 bytes @ 0x0
   505                           
   506  0070                     ?_ISR_Handler:	
   507                           ; 0 bytes @ 0x0
   508                           
   509  0070                     ?_i2c_read_byte:	
   510                           ; 0 bytes @ 0x0
   511                           
   512  0070                     i2c_handler@msg:	
   513                           ; 1 bytes @ 0x0
   514                           
   515                           
   516                           ; 4 bytes @ 0x0
   517  0070                     	ds	4
   518  0074                     ??_i2c_handler:	
   519  0074                     ??_msg_resolve:	
   520                           ; 0 bytes @ 0x4
   521                           
   522  0074                     ??_ISR_Handler:	
   523                           ; 0 bytes @ 0x4
   524                           
   525                           
   526                           ; 0 bytes @ 0x4
   527  0074                     	ds	5
   528                           
   529                           	psect	cstackBANK0
   530  0020                     __pcstackBANK0:	
   531  0020                     ??_init_adc:	
   532  0020                     ??_i2c_set_handler:	
   533                           ; 0 bytes @ 0x0
   534                           
   535  0020                     ??_i2c_init_slave:	
   536                           ; 0 bytes @ 0x0
   537                           
   538  0020                     ?_PWM2_duty:	
   539                           ; 0 bytes @ 0x0
   540                           
   541  0020                     ??_PWM2_start:	
   542                           ; 0 bytes @ 0x0
   543                           
   544  0020                     ??_get_input:	
   545                           ; 0 bytes @ 0x0
   546                           
   547  0020                     ?___lldiv:	
   548                           ; 0 bytes @ 0x0
   549                           
   550  0020                     PWM2_duty@duty:	
   551                           ; 4 bytes @ 0x0
   552                           
   553  0020                     ___lldiv@divisor:	
   554                           ; 2 bytes @ 0x0
   555                           
   556                           
   557                           ; 4 bytes @ 0x0
   558  0020                     	ds	1
   559  0021                     ?_adc_channel:	
   560  0021                     i2c_set_handler@h:	
   561                           ; 2 bytes @ 0x1
   562                           
   563  0021                     adc_channel@ch:	
   564                           ; 1 bytes @ 0x1
   565                           
   566                           
   567                           ; 2 bytes @ 0x1
   568  0021                     	ds	1
   569  0022                     ??_PWM2_duty:	
   570                           
   571                           ; 0 bytes @ 0x2
   572  0022                     	ds	1
   573  0023                     ??_adc_channel:	
   574                           
   575                           ; 0 bytes @ 0x3
   576  0023                     	ds	1
   577  0024                     ___lldiv@dividend:	
   578                           
   579                           ; 4 bytes @ 0x4
   580  0024                     	ds	1
   581  0025                     adc_channel@adc_val:	
   582                           
   583                           ; 2 bytes @ 0x5
   584  0025                     	ds	3
   585  0028                     ??___lldiv:	
   586                           
   587                           ; 0 bytes @ 0x8
   588  0028                     	ds	1
   589  0029                     ___lldiv@quotient:	
   590                           
   591                           ; 4 bytes @ 0x9
   592  0029                     	ds	4
   593  002D                     ___lldiv@counter:	
   594                           
   595                           ; 1 bytes @ 0xD
   596  002D                     	ds	1
   597  002E                     ?_PWM2_init:	
   598  002E                     PWM2_init@fre:	
   599                           ; 0 bytes @ 0xE
   600                           
   601                           
   602                           ; 4 bytes @ 0xE
   603  002E                     	ds	4
   604  0032                     ??_PWM2_init:	
   605                           
   606                           ; 0 bytes @ 0x12
   607  0032                     	ds	4
   608  0036                     ??_main:	
   609  0036                     main@adc_value2_71:	
   610                           ; 0 bytes @ 0x16
   611                           
   612                           
   613                           ; 2 bytes @ 0x16
   614  0036                     	ds	2
   615  0038                     main@adc_value3_72:	
   616                           
   617                           ; 2 bytes @ 0x18
   618  0038                     	ds	2
   619  003A                     main@adc_value1_70:	
   620                           
   621                           ; 2 bytes @ 0x1A
   622  003A                     	ds	2
   623                           
   624                           	psect	maintext
   625  010A                     __pmaintext:	
   626 ;;
   627 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   628 ;;
   629 ;; *************** function _main *****************
   630 ;; Defined at:
   631 ;;		line 31 in file "main.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;  adc_value1      2   26[BANK0 ] unsigned short 
   636 ;;  adc_value3      2   24[BANK0 ] unsigned short 
   637 ;;  adc_value2      2   22[BANK0 ] unsigned short 
   638 ;;  adc_value3      1    0        unsigned char 
   639 ;;  adc_value2      1    0        unsigned char 
   640 ;;  adc_value1      1    0        unsigned char 
   641 ;; Return value:  Size  Location     Type
   642 ;;		None               void
   643 ;; Registers used:
   644 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   645 ;; Tracked objects:
   646 ;;		On entry : B00/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   650 ;;      Params:         0       0       0       0       0
   651 ;;      Locals:         0       6       0       0       0
   652 ;;      Temps:          0       0       0       0       0
   653 ;;      Totals:         0       6       0       0       0
   654 ;;Total ram usage:        6 bytes
   655 ;; Hardware stack levels required when called:    5
   656 ;; This function calls:
   657 ;;		_PWM2_duty
   658 ;;		_PWM2_init
   659 ;;		_PWM2_start
   660 ;;		_adc_channel
   661 ;;		_i2c_init_slave
   662 ;;		_i2c_set_handler
   663 ;;		_init_adc
   664 ;; This function is called by:
   665 ;;		Startup code after reset
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           
   670                           ;psect for function _main
   671  010A                     _main:	
   672                           
   673                           ;main.c: 34: unsigned char adc_value1, adc_value2, adc_value3;
   674                           ;main.c: 36: init_adc();
   675                           
   676                           ;incstack = 0
   677                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   678  010A  120A  118A  22AE  120A  118A  	fcall	_init_adc
   679                           
   680                           ;main.c: 39: TRISD = 0x00;
   681  010F  1683               	bsf	3,5	;RP0=1, select bank1
   682  0110  1303               	bcf	3,6	;RP1=0, select bank1
   683  0111  0188               	clrf	8	;volatile
   684                           
   685                           ;main.c: 40: PORTD = 0x0;
   686  0112  1283               	bcf	3,5	;RP0=0, select bank0
   687  0113  1303               	bcf	3,6	;RP1=0, select bank0
   688  0114  0188               	clrf	8	;volatile
   689                           
   690                           ;main.c: 43: i2c_set_handler(&i2c_handler);
   691  0115  3001               	movlw	(low (fp__i2c_handler-i1fpbase))& (0+255)
   692  0116  120A  118A  22FA  120A  118A  	fcall	_i2c_set_handler
   693                           
   694                           ;main.c: 46: i2c_init_slave();
   695  011B  120A  118A  22C1  120A  118A  	fcall	_i2c_init_slave
   696                           
   697                           ;main.c: 49: PWM2_init(1000);
   698  0120  3000               	movlw	0
   699  0121  1283               	bcf	3,5	;RP0=0, select bank0
   700  0122  1303               	bcf	3,6	;RP1=0, select bank0
   701  0123  00B1               	movwf	PWM2_init@fre+3
   702  0124  3000               	movlw	0
   703  0125  00B0               	movwf	PWM2_init@fre+2
   704  0126  3003               	movlw	3
   705  0127  00AF               	movwf	PWM2_init@fre+1
   706  0128  30E8               	movlw	232
   707  0129  00AE               	movwf	PWM2_init@fre
   708  012A  120A  118A  21DA  120A  118A  	fcall	_PWM2_init
   709                           
   710                           ;main.c: 50: PWM2_duty(0);
   711  012F  3000               	movlw	0
   712  0130  1283               	bcf	3,5	;RP0=0, select bank0
   713  0131  1303               	bcf	3,6	;RP1=0, select bank0
   714  0132  00A0               	movwf	PWM2_duty@duty
   715  0133  00A1               	movwf	PWM2_duty@duty+1
   716  0134  120A  118A  228A  120A  118A  	fcall	_PWM2_duty
   717                           
   718                           ;main.c: 51: PWM2_start();
   719  0139  120A  118A  22EF  120A  118A  	fcall	_PWM2_start
   720  013E                     l993:	
   721                           ;main.c: 53: while (1) {
   722                           
   723                           
   724                           ;main.c: 56: unsigned short adc_value1 = adc_channel(0);
   725  013E  3000               	movlw	0
   726  013F  1283               	bcf	3,5	;RP0=0, select bank0
   727  0140  1303               	bcf	3,6	;RP1=0, select bank0
   728  0141  00A1               	movwf	adc_channel@ch
   729  0142  00A2               	movwf	adc_channel@ch+1
   730  0143  120A  118A  225C  120A  118A  	fcall	_adc_channel
   731  0148  1283               	bcf	3,5	;RP0=0, select bank0
   732  0149  1303               	bcf	3,6	;RP1=0, select bank0
   733  014A  0822               	movf	?_adc_channel+1,w
   734  014B  00BB               	movwf	main@adc_value1_70+1
   735  014C  0821               	movf	?_adc_channel,w
   736  014D  00BA               	movwf	main@adc_value1_70
   737                           
   738                           ;main.c: 57: unsigned short adc_value2 = adc_channel(1);
   739  014E  3001               	movlw	1
   740  014F  00A1               	movwf	adc_channel@ch
   741  0150  3000               	movlw	0
   742  0151  00A2               	movwf	adc_channel@ch+1
   743  0152  120A  118A  225C  120A  118A  	fcall	_adc_channel
   744  0157  1283               	bcf	3,5	;RP0=0, select bank0
   745  0158  1303               	bcf	3,6	;RP1=0, select bank0
   746  0159  0822               	movf	?_adc_channel+1,w
   747  015A  00B7               	movwf	main@adc_value2_71+1
   748  015B  0821               	movf	?_adc_channel,w
   749  015C  00B6               	movwf	main@adc_value2_71
   750                           
   751                           ;main.c: 58: unsigned short adc_value3 = adc_channel(2);
   752  015D  3002               	movlw	2
   753  015E  00A1               	movwf	adc_channel@ch
   754  015F  3000               	movlw	0
   755  0160  00A2               	movwf	adc_channel@ch+1
   756  0161  120A  118A  225C  120A  118A  	fcall	_adc_channel
   757  0166  1283               	bcf	3,5	;RP0=0, select bank0
   758  0167  1303               	bcf	3,6	;RP1=0, select bank0
   759  0168  0822               	movf	?_adc_channel+1,w
   760  0169  00B9               	movwf	main@adc_value3_72+1
   761  016A  0821               	movf	?_adc_channel,w
   762  016B  00B8               	movwf	main@adc_value3_72
   763                           
   764                           ;main.c: 61: duty = adc_value1;
   765  016C  083B               	movf	main@adc_value1_70+1,w
   766  016D  00C1               	movwf	_duty+1	;volatile
   767  016E  083A               	movf	main@adc_value1_70,w
   768  016F  00C0               	movwf	_duty	;volatile
   769                           
   770                           ;main.c: 62: PWM2_duty(duty);
   771  0170  0841               	movf	_duty+1,w	;volatile
   772  0171  00A1               	movwf	PWM2_duty@duty+1
   773  0172  0840               	movf	_duty,w	;volatile
   774  0173  00A0               	movwf	PWM2_duty@duty
   775  0174  120A  118A  228A  120A  118A  	fcall	_PWM2_duty
   776  0179  293E               	goto	l993
   777  017A                     __end_of_main:	
   778                           
   779                           	psect	text1
   780  02AE                     __ptext1:	
   781 ;; *************** function _init_adc *****************
   782 ;; Defined at:
   783 ;;		line 15 in file "adc.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;		None               void
   790 ;; Registers used:
   791 ;;		wreg, status,2, status,0
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   797 ;;      Params:         0       0       0       0       0
   798 ;;      Locals:         0       0       0       0       0
   799 ;;      Temps:          0       0       0       0       0
   800 ;;      Totals:         0       0       0       0       0
   801 ;;Total ram usage:        0 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; Hardware stack levels required when called:    3
   804 ;; This function calls:
   805 ;;		Nothing
   806 ;; This function is called by:
   807 ;;		_main
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           
   812                           ;psect for function _init_adc
   813  02AE                     _init_adc:	
   814                           
   815                           ;adc.c: 19: TRISBbits.TRISB4 = 1;
   816                           
   817                           ;incstack = 0
   818                           ; Regs used in _init_adc: [wreg+status,2+status,0]
   819  02AE  1683               	bsf	3,5	;RP0=1, select bank1
   820  02AF  1303               	bcf	3,6	;RP1=0, select bank1
   821  02B0  1606               	bsf	6,4	;volatile
   822                           
   823                           ;adc.c: 21: ANSEL = 0x01;
   824  02B1  3001               	movlw	1
   825  02B2  0091               	movwf	17	;volatile
   826                           
   827                           ;adc.c: 22: TRISA = 0xFF;
   828  02B3  30FF               	movlw	255
   829  02B4  0085               	movwf	5	;volatile
   830                           
   831                           ;adc.c: 24: TRISD = 0x00;
   832  02B5  0188               	clrf	8	;volatile
   833                           
   834                           ;adc.c: 28: ADCON1bits.ADCS = 0b11;
   835  02B6  081F               	movf	31,w	;volatile
   836  02B7  398F               	andlw	-113
   837  02B8  3830               	iorlw	48
   838  02B9  009F               	movwf	31	;volatile
   839                           
   840                           ;adc.c: 31: ADCON0bits.VCFG = 0;
   841  02BA  309F               	movlw	-97
   842  02BB  1283               	bcf	3,5	;RP0=0, select bank0
   843  02BC  1303               	bcf	3,6	;RP1=0, select bank0
   844  02BD  059F               	andwf	31,f	;volatile
   845                           
   846                           ;adc.c: 37: ADCON0bits.ADFM = 1;
   847  02BE  179F               	bsf	31,7	;volatile
   848                           
   849                           ;adc.c: 39: ADCON0bits.ADON = 1;
   850  02BF  141F               	bsf	31,0	;volatile
   851  02C0  0008               	return
   852  02C1                     __end_of_init_adc:	
   853                           
   854                           	psect	text2
   855  02FA                     __ptext2:	
   856 ;; *************** function _i2c_set_handler *****************
   857 ;; Defined at:
   858 ;;		line 56 in file "i2c.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;  h               1    wreg     PTR FTN(struct message,)
   861 ;;		 -> i2c_handler(0), 
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  h               1    1[BANK0 ] PTR FTN(struct message,)
   864 ;;		 -> i2c_handler(0), 
   865 ;; Return value:  Size  Location     Type
   866 ;;		None               void
   867 ;; Registers used:
   868 ;;		wreg
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         0       0       0       0       0
   875 ;;      Locals:         0       1       0       0       0
   876 ;;      Temps:          0       1       0       0       0
   877 ;;      Totals:         0       2       0       0       0
   878 ;;Total ram usage:        2 bytes
   879 ;; Hardware stack levels used:    1
   880 ;; Hardware stack levels required when called:    3
   881 ;; This function calls:
   882 ;;		Nothing
   883 ;; This function is called by:
   884 ;;		_main
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           
   889                           ;psect for function _i2c_set_handler
   890  02FA                     _i2c_set_handler:	
   891                           
   892                           ;incstack = 0
   893                           ; Regs used in _i2c_set_handler: [wreg]
   894                           ;i2c_set_handler@h stored from wreg
   895  02FA  1283               	bcf	3,5	;RP0=0, select bank0
   896  02FB  1303               	bcf	3,6	;RP1=0, select bank0
   897  02FC  00A1               	movwf	i2c_set_handler@h
   898                           
   899                           ;i2c.c: 57: p = h;
   900  02FD  0821               	movf	i2c_set_handler@h,w
   901  02FE  00A0               	movwf	??_i2c_set_handler
   902  02FF  0820               	movf	??_i2c_set_handler,w
   903  0300  00FB               	movwf	_p
   904  0301  0008               	return
   905  0302                     __end_of_i2c_set_handler:	
   906                           
   907                           	psect	text3
   908  02C1                     __ptext3:	
   909 ;; *************** function _i2c_init_slave *****************
   910 ;; Defined at:
   911 ;;		line 22 in file "i2c.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;		None
   914 ;; Auto vars:     Size  Location     Type
   915 ;;		None
   916 ;; Return value:  Size  Location     Type
   917 ;;		None               void
   918 ;; Registers used:
   919 ;;		wreg
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       0       0       0       0
   926 ;;      Locals:         0       0       0       0       0
   927 ;;      Temps:          0       0       0       0       0
   928 ;;      Totals:         0       0       0       0       0
   929 ;;Total ram usage:        0 bytes
   930 ;; Hardware stack levels used:    1
   931 ;; Hardware stack levels required when called:    3
   932 ;; This function calls:
   933 ;;		Nothing
   934 ;; This function is called by:
   935 ;;		_main
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           
   940                           ;psect for function _i2c_init_slave
   941  02C1                     _i2c_init_slave:	
   942                           
   943                           ;i2c.c: 24: TRISC7 = 1;
   944                           
   945                           ;incstack = 0
   946                           ; Regs used in _i2c_init_slave: [wreg]
   947  02C1  1683               	bsf	3,5	;RP0=1, select bank1
   948  02C2  1303               	bcf	3,6	;RP1=0, select bank1
   949  02C3  1787               	bsf	7,7	;volatile
   950                           
   951                           ;i2c.c: 25: TRISC6 = 1;
   952  02C4  1707               	bsf	7,6	;volatile
   953                           
   954                           ;i2c.c: 28: SSPADD = 0x10 << 1;
   955  02C5  3020               	movlw	32
   956  02C6  0093               	movwf	19	;volatile
   957                           
   958                           ;i2c.c: 31: SSPCON = 0x36;
   959  02C7  3036               	movlw	54
   960  02C8  1283               	bcf	3,5	;RP0=0, select bank0
   961  02C9  1303               	bcf	3,6	;RP1=0, select bank0
   962  02CA  0094               	movwf	20	;volatile
   963                           
   964                           ;i2c.c: 34: GIE = 1;
   965  02CB  178B               	bsf	11,7	;volatile
   966                           
   967                           ;i2c.c: 35: PEIE = 1;
   968  02CC  170B               	bsf	11,6	;volatile
   969                           
   970                           ;i2c.c: 36: SSPIE = 1;
   971  02CD  1683               	bsf	3,5	;RP0=1, select bank1
   972  02CE  1303               	bcf	3,6	;RP1=0, select bank1
   973  02CF  158C               	bsf	12,3	;volatile
   974  02D0  0008               	return
   975  02D1                     __end_of_i2c_init_slave:	
   976                           
   977                           	psect	text4
   978  025C                     __ptext4:	
   979 ;; *************** function _adc_channel *****************
   980 ;; Defined at:
   981 ;;		line 63 in file "adc.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;  ch              2    1[BANK0 ] int 
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  adc_val         2    5[BANK0 ] unsigned short 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  2    1[BANK0 ] unsigned short 
   988 ;; Registers used:
   989 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   995 ;;      Params:         0       2       0       0       0
   996 ;;      Locals:         0       2       0       0       0
   997 ;;      Temps:          0       2       0       0       0
   998 ;;      Totals:         0       6       0       0       0
   999 ;;Total ram usage:        6 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; Hardware stack levels required when called:    4
  1002 ;; This function calls:
  1003 ;;		_get_input
  1004 ;; This function is called by:
  1005 ;;		_main
  1006 ;;		_read_feedback
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           
  1011                           ;psect for function _adc_channel
  1012  025C                     _adc_channel:	
  1013                           
  1014                           ;adc.c: 66: ADCON0bits.CHS = ch;
  1015                           
  1016                           ;incstack = 0
  1017                           ; Regs used in _adc_channel: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1018  025C  1283               	bcf	3,5	;RP0=0, select bank0
  1019  025D  1303               	bcf	3,6	;RP1=0, select bank0
  1020  025E  0821               	movf	adc_channel@ch,w
  1021  025F  00A3               	movwf	??_adc_channel
  1022  0260  0DA3               	rlf	??_adc_channel,f
  1023  0261  0DA3               	rlf	??_adc_channel,f
  1024  0262  081F               	movf	31,w	;volatile
  1025  0263  0623               	xorwf	??_adc_channel,w
  1026  0264  39E3               	andlw	-29
  1027  0265  0623               	xorwf	??_adc_channel,w
  1028  0266  009F               	movwf	31	;volatile
  1029                           
  1030                           ;adc.c: 69: get_input();
  1031  0267  120A  118A  22D1   	fcall	_get_input
  1032                           
  1033                           ;adc.c: 72: unsigned short adc_val = (unsigned int)ADRESH << 8 ;
  1034  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1035  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1036  026C  081E               	movf	30,w	;volatile
  1037  026D  00A3               	movwf	??_adc_channel
  1038  026E  01A4               	clrf	??_adc_channel+1
  1039  026F  0823               	movf	??_adc_channel,w
  1040  0270  00A4               	movwf	??_adc_channel+1
  1041  0271  01A3               	clrf	??_adc_channel
  1042  0272  0823               	movf	??_adc_channel,w
  1043  0273  00A5               	movwf	adc_channel@adc_val
  1044  0274  0824               	movf	??_adc_channel+1,w
  1045  0275  00A6               	movwf	adc_channel@adc_val+1
  1046                           
  1047                           ;adc.c: 73: adc_val = adc_val + ADRESL;
  1048  0276  1683               	bsf	3,5	;RP0=1, select bank1
  1049  0277  1303               	bcf	3,6	;RP1=0, select bank1
  1050  0278  081E               	movf	30,w	;volatile
  1051  0279  1283               	bcf	3,5	;RP0=0, select bank0
  1052  027A  1303               	bcf	3,6	;RP1=0, select bank0
  1053  027B  0725               	addwf	adc_channel@adc_val,w
  1054  027C  00A3               	movwf	??_adc_channel
  1055  027D  0826               	movf	adc_channel@adc_val+1,w
  1056  027E  1803               	skipnc
  1057  027F  0A26               	incf	adc_channel@adc_val+1,w
  1058  0280  00A4               	movwf	??_adc_channel+1
  1059  0281  0823               	movf	??_adc_channel,w
  1060  0282  00A5               	movwf	adc_channel@adc_val
  1061  0283  0824               	movf	??_adc_channel+1,w
  1062  0284  00A6               	movwf	adc_channel@adc_val+1
  1063                           
  1064                           ;adc.c: 74: return adc_val;
  1065  0285  0826               	movf	adc_channel@adc_val+1,w
  1066  0286  00A2               	movwf	?_adc_channel+1
  1067  0287  0825               	movf	adc_channel@adc_val,w
  1068  0288  00A1               	movwf	?_adc_channel
  1069  0289  0008               	return
  1070  028A                     __end_of_adc_channel:	
  1071                           
  1072                           	psect	text5
  1073  02D1                     __ptext5:	
  1074 ;; *************** function _get_input *****************
  1075 ;; Defined at:
  1076 ;;		line 48 in file "adc.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;		None
  1081 ;; Return value:  Size  Location     Type
  1082 ;;		None               void
  1083 ;; Registers used:
  1084 ;;		wreg
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1090 ;;      Params:         0       0       0       0       0
  1091 ;;      Locals:         0       0       0       0       0
  1092 ;;      Temps:          0       1       0       0       0
  1093 ;;      Totals:         0       1       0       0       0
  1094 ;;Total ram usage:        1 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; Hardware stack levels required when called:    3
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		_adc_channel
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           
  1105                           ;psect for function _get_input
  1106  02D1                     _get_input:	
  1107                           
  1108                           ;adc.c: 52: _delay((unsigned long)((1)*(4000000/4000.0)));
  1109                           
  1110                           ;incstack = 0
  1111                           ; Regs used in _get_input: [wreg]
  1112  02D1  30F9               	movlw	249
  1113  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1114  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1115  02D4  00A0               	movwf	??_get_input
  1116  02D5                     u527:	
  1117  02D5  0000               	nop
  1118  02D6  0BA0               	decfsz	??_get_input,f
  1119  02D7  2AD5               	goto	u527
  1120  02D8  2AD9               	nop2	;nop
  1121  02D9  0000               	nop
  1122                           
  1123                           ;adc.c: 54: ADCON0bits.GO_nDONE = 1;
  1124  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1125  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1126  02DC  149F               	bsf	31,1	;volatile
  1127  02DD                     l61:	
  1128                           ;adc.c: 59: while(ADCON0bits.GO_nDONE == 1);
  1129                           
  1130  02DD  1C9F               	btfss	31,1	;volatile
  1131  02DE  0008               	return
  1132  02DF  2ADD               	goto	l61
  1133  02E0                     __end_of_get_input:	
  1134                           
  1135                           	psect	text6
  1136  02EF                     __ptext6:	
  1137 ;; *************** function _PWM2_start *****************
  1138 ;; Defined at:
  1139 ;;		line 107 in file "pwm.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;		None
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;		None
  1144 ;; Return value:  Size  Location     Type
  1145 ;;		None               void
  1146 ;; Registers used:
  1147 ;;		None
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1153 ;;      Params:         0       0       0       0       0
  1154 ;;      Locals:         0       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0
  1156 ;;      Totals:         0       0       0       0       0
  1157 ;;Total ram usage:        0 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    3
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_main
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           
  1168                           ;psect for function _PWM2_start
  1169  02EF                     _PWM2_start:	
  1170                           
  1171                           ;pwm.c: 108: CCP2M3 = 1;
  1172                           
  1173                           ;incstack = 0
  1174                           ; Regs used in _PWM2_start: []
  1175  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  1176  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  1177  02F1  159D               	bsf	29,3	;volatile
  1178                           
  1179                           ;pwm.c: 109: CCP2M2 = 1;
  1180  02F2  151D               	bsf	29,2	;volatile
  1181                           
  1182                           ;pwm.c: 114: T2CKPS0 = 1;
  1183  02F3  1412               	bsf	18,0	;volatile
  1184                           
  1185                           ;pwm.c: 115: T2CKPS1 = 0;
  1186  02F4  1092               	bcf	18,1	;volatile
  1187                           
  1188                           ;pwm.c: 120: TMR2ON = 1;
  1189  02F5  1512               	bsf	18,2	;volatile
  1190                           
  1191                           ;pwm.c: 121: TRISC1 = 0;
  1192  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  1193  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  1194  02F8  1087               	bcf	7,1	;volatile
  1195  02F9  0008               	return
  1196  02FA                     __end_of_PWM2_start:	
  1197                           
  1198                           	psect	text7
  1199  01DA                     __ptext7:	
  1200 ;; *************** function _PWM2_init *****************
  1201 ;; Defined at:
  1202 ;;		line 41 in file "pwm.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  fre             4   14[BANK0 ] unsigned long 
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;		None
  1207 ;; Return value:  Size  Location     Type
  1208 ;;		None               void
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0, pclath, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1216 ;;      Params:         0       4       0       0       0
  1217 ;;      Locals:         0       0       0       0       0
  1218 ;;      Temps:          0       4       0       0       0
  1219 ;;      Totals:         0       8       0       0       0
  1220 ;;Total ram usage:        8 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    4
  1223 ;; This function calls:
  1224 ;;		___lldiv
  1225 ;; This function is called by:
  1226 ;;		_main
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           
  1231                           ;psect for function _PWM2_init
  1232  01DA                     _PWM2_init:	
  1233                           
  1234                           ;pwm.c: 42: PR2 = (4000000 / (fre * 4 * 4)) - 1;
  1235                           
  1236                           ;incstack = 0
  1237                           ; Regs used in _PWM2_init: [wreg+status,2+status,0+pclath+cstack]
  1238  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1239  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1240  01DC  082E               	movf	PWM2_init@fre,w
  1241  01DD  00B2               	movwf	??_PWM2_init
  1242  01DE  082F               	movf	PWM2_init@fre+1,w
  1243  01DF  00B3               	movwf	??_PWM2_init+1
  1244  01E0  0830               	movf	PWM2_init@fre+2,w
  1245  01E1  00B4               	movwf	??_PWM2_init+2
  1246  01E2  0831               	movf	PWM2_init@fre+3,w
  1247  01E3  00B5               	movwf	??_PWM2_init+3
  1248  01E4  3002               	movlw	2
  1249  01E5                     u365:	
  1250  01E5  1003               	clrc
  1251  01E6  0DB2               	rlf	??_PWM2_init,f
  1252  01E7  0DB3               	rlf	??_PWM2_init+1,f
  1253  01E8  0DB4               	rlf	??_PWM2_init+2,f
  1254  01E9  0DB5               	rlf	??_PWM2_init+3,f
  1255  01EA  3EFF               	addlw	-1
  1256  01EB  1D03               	skipz
  1257  01EC  29E5               	goto	u365
  1258  01ED  3002               	movlw	2
  1259  01EE                     u375:	
  1260  01EE  1003               	clrc
  1261  01EF  0DB2               	rlf	??_PWM2_init,f
  1262  01F0  0DB3               	rlf	??_PWM2_init+1,f
  1263  01F1  0DB4               	rlf	??_PWM2_init+2,f
  1264  01F2  0DB5               	rlf	??_PWM2_init+3,f
  1265  01F3  3EFF               	addlw	-1
  1266  01F4  1D03               	skipz
  1267  01F5  29EE               	goto	u375
  1268  01F6  0835               	movf	??_PWM2_init+3,w
  1269  01F7  00A3               	movwf	___lldiv@divisor+3
  1270  01F8  0834               	movf	??_PWM2_init+2,w
  1271  01F9  00A2               	movwf	___lldiv@divisor+2
  1272  01FA  0833               	movf	??_PWM2_init+1,w
  1273  01FB  00A1               	movwf	___lldiv@divisor+1
  1274  01FC  0832               	movf	??_PWM2_init,w
  1275  01FD  00A0               	movwf	___lldiv@divisor
  1276  01FE  3000               	movlw	0
  1277  01FF  00A7               	movwf	___lldiv@dividend+3
  1278  0200  303D               	movlw	61
  1279  0201  00A6               	movwf	___lldiv@dividend+2
  1280  0202  3009               	movlw	9
  1281  0203  00A5               	movwf	___lldiv@dividend+1
  1282  0204  3000               	movlw	0
  1283  0205  00A4               	movwf	___lldiv@dividend
  1284  0206  120A  118A  217A   	fcall	___lldiv
  1285  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1286  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1287  020B  0820               	movf	?___lldiv,w
  1288  020C  3EFF               	addlw	255
  1289  020D  1683               	bsf	3,5	;RP0=1, select bank1
  1290  020E  1303               	bcf	3,6	;RP1=0, select bank1
  1291  020F  0092               	movwf	18	;volatile
  1292                           
  1293                           ;pwm.c: 43: freq = fre;
  1294  0210  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0211  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0212  0831               	movf	PWM2_init@fre+3,w
  1297  0213  00C5               	movwf	_freq+3
  1298  0214  0830               	movf	PWM2_init@fre+2,w
  1299  0215  00C4               	movwf	_freq+2
  1300  0216  082F               	movf	PWM2_init@fre+1,w
  1301  0217  00C3               	movwf	_freq+1
  1302  0218  082E               	movf	PWM2_init@fre,w
  1303  0219  00C2               	movwf	_freq
  1304  021A  0008               	return
  1305  021B                     __end_of_PWM2_init:	
  1306                           
  1307                           	psect	text8
  1308  017A                     __ptext8:	
  1309 ;; *************** function ___lldiv *****************
  1310 ;; Defined at:
  1311 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  divisor         4    0[BANK0 ] unsigned long 
  1314 ;;  dividend        4    4[BANK0 ] unsigned long 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  quotient        4    9[BANK0 ] unsigned long 
  1317 ;;  counter         1   13[BANK0 ] unsigned char 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  4    0[BANK0 ] unsigned long 
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, status,0
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       8       0       0       0
  1328 ;;      Locals:         0       5       0       0       0
  1329 ;;      Temps:          0       1       0       0       0
  1330 ;;      Totals:         0      14       0       0       0
  1331 ;;Total ram usage:       14 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    3
  1334 ;; This function calls:
  1335 ;;		Nothing
  1336 ;; This function is called by:
  1337 ;;		_PWM2_init
  1338 ;;		_PWM1_init
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           
  1343                           ;psect for function ___lldiv
  1344  017A                     ___lldiv:	
  1345                           
  1346                           ;incstack = 0
  1347                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1348  017A  3000               	movlw	0
  1349  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1350  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1351  017D  00AC               	movwf	___lldiv@quotient+3
  1352  017E  3000               	movlw	0
  1353  017F  00AB               	movwf	___lldiv@quotient+2
  1354  0180  3000               	movlw	0
  1355  0181  00AA               	movwf	___lldiv@quotient+1
  1356  0182  3000               	movlw	0
  1357  0183  00A9               	movwf	___lldiv@quotient
  1358  0184  0823               	movf	___lldiv@divisor+3,w
  1359  0185  0422               	iorwf	___lldiv@divisor+2,w
  1360  0186  0421               	iorwf	___lldiv@divisor+1,w
  1361  0187  0420               	iorwf	___lldiv@divisor,w
  1362  0188  1903               	skipnz
  1363  0189  29D1               	goto	l919
  1364  018A  01AD               	clrf	___lldiv@counter
  1365  018B  0AAD               	incf	___lldiv@counter,f
  1366  018C                     l905:	
  1367  018C  1BA3               	btfsc	___lldiv@divisor+3,7
  1368  018D  299C               	goto	l907
  1369  018E  3001               	movlw	1
  1370  018F  00A8               	movwf	??___lldiv
  1371  0190                     u305:	
  1372  0190  1003               	clrc
  1373  0191  0DA0               	rlf	___lldiv@divisor,f
  1374  0192  0DA1               	rlf	___lldiv@divisor+1,f
  1375  0193  0DA2               	rlf	___lldiv@divisor+2,f
  1376  0194  0DA3               	rlf	___lldiv@divisor+3,f
  1377  0195  0BA8               	decfsz	??___lldiv,f
  1378  0196  2990               	goto	u305
  1379  0197  3001               	movlw	1
  1380  0198  00A8               	movwf	??___lldiv
  1381  0199  0828               	movf	??___lldiv,w
  1382  019A  07AD               	addwf	___lldiv@counter,f
  1383  019B  298C               	goto	l905
  1384  019C                     l907:	
  1385  019C  3001               	movlw	1
  1386  019D  00A8               	movwf	??___lldiv
  1387  019E                     u325:	
  1388  019E  1003               	clrc
  1389  019F  0DA9               	rlf	___lldiv@quotient,f
  1390  01A0  0DAA               	rlf	___lldiv@quotient+1,f
  1391  01A1  0DAB               	rlf	___lldiv@quotient+2,f
  1392  01A2  0DAC               	rlf	___lldiv@quotient+3,f
  1393  01A3  0BA8               	decfsz	??___lldiv,f
  1394  01A4  299E               	goto	u325
  1395  01A5  0823               	movf	___lldiv@divisor+3,w
  1396  01A6  0227               	subwf	___lldiv@dividend+3,w
  1397  01A7  1D03               	skipz
  1398  01A8  29B3               	goto	u335
  1399  01A9  0822               	movf	___lldiv@divisor+2,w
  1400  01AA  0226               	subwf	___lldiv@dividend+2,w
  1401  01AB  1D03               	skipz
  1402  01AC  29B3               	goto	u335
  1403  01AD  0821               	movf	___lldiv@divisor+1,w
  1404  01AE  0225               	subwf	___lldiv@dividend+1,w
  1405  01AF  1D03               	skipz
  1406  01B0  29B3               	goto	u335
  1407  01B1  0820               	movf	___lldiv@divisor,w
  1408  01B2  0224               	subwf	___lldiv@dividend,w
  1409  01B3                     u335:	
  1410  01B3  1C03               	skipc
  1411  01B4  29C4               	goto	l915
  1412  01B5  0820               	movf	___lldiv@divisor,w
  1413  01B6  02A4               	subwf	___lldiv@dividend,f
  1414  01B7  0821               	movf	___lldiv@divisor+1,w
  1415  01B8  1C03               	skipc
  1416  01B9  0F21               	incfsz	___lldiv@divisor+1,w
  1417  01BA  02A5               	subwf	___lldiv@dividend+1,f
  1418  01BB  0822               	movf	___lldiv@divisor+2,w
  1419  01BC  1C03               	skipc
  1420  01BD  0F22               	incfsz	___lldiv@divisor+2,w
  1421  01BE  02A6               	subwf	___lldiv@dividend+2,f
  1422  01BF  0823               	movf	___lldiv@divisor+3,w
  1423  01C0  1C03               	skipc
  1424  01C1  0F23               	incfsz	___lldiv@divisor+3,w
  1425  01C2  02A7               	subwf	___lldiv@dividend+3,f
  1426  01C3  1429               	bsf	___lldiv@quotient,0
  1427  01C4                     l915:	
  1428  01C4  3001               	movlw	1
  1429  01C5                     u345:	
  1430  01C5  1003               	clrc
  1431  01C6  0CA3               	rrf	___lldiv@divisor+3,f
  1432  01C7  0CA2               	rrf	___lldiv@divisor+2,f
  1433  01C8  0CA1               	rrf	___lldiv@divisor+1,f
  1434  01C9  0CA0               	rrf	___lldiv@divisor,f
  1435  01CA  3EFF               	addlw	-1
  1436  01CB  1D03               	skipz
  1437  01CC  29C5               	goto	u345
  1438  01CD  3001               	movlw	1
  1439  01CE  02AD               	subwf	___lldiv@counter,f
  1440  01CF  1D03               	btfss	3,2
  1441  01D0  299C               	goto	l907
  1442  01D1                     l919:	
  1443  01D1  082C               	movf	___lldiv@quotient+3,w
  1444  01D2  00A3               	movwf	?___lldiv+3
  1445  01D3  082B               	movf	___lldiv@quotient+2,w
  1446  01D4  00A2               	movwf	?___lldiv+2
  1447  01D5  082A               	movf	___lldiv@quotient+1,w
  1448  01D6  00A1               	movwf	?___lldiv+1
  1449  01D7  0829               	movf	___lldiv@quotient,w
  1450  01D8  00A0               	movwf	?___lldiv
  1451  01D9  0008               	return
  1452  01DA                     __end_of___lldiv:	
  1453                           
  1454                           	psect	text9
  1455  028A                     __ptext9:	
  1456 ;; *************** function _PWM2_duty *****************
  1457 ;; Defined at:
  1458 ;;		line 63 in file "pwm.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  duty            2    0[BANK0 ] unsigned int 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;		None               void
  1465 ;; Registers used:
  1466 ;;		wreg, status,2, status,0
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1472 ;;      Params:         0       2       0       0       0
  1473 ;;      Locals:         0       0       0       0       0
  1474 ;;      Temps:          0       2       0       0       0
  1475 ;;      Totals:         0       4       0       0       0
  1476 ;;Total ram usage:        4 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; Hardware stack levels required when called:    3
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_main
  1483 ;;		_PWM2_duty_percent
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           
  1488                           ;psect for function _PWM2_duty
  1489  028A                     _PWM2_duty:	
  1490                           
  1491                           ;pwm.c: 65: if (duty > 1023)
  1492                           
  1493                           ;incstack = 0
  1494                           ; Regs used in _PWM2_duty: [wreg+status,2+status,0]
  1495  028A  3004               	movlw	4
  1496  028B  1283               	bcf	3,5	;RP0=0, select bank0
  1497  028C  1303               	bcf	3,6	;RP1=0, select bank0
  1498  028D  0221               	subwf	PWM2_duty@duty+1,w
  1499  028E  3000               	movlw	0
  1500  028F  1903               	skipnz
  1501  0290  0220               	subwf	PWM2_duty@duty,w
  1502  0291  1C03               	skipc
  1503  0292  2A97               	goto	l959
  1504                           
  1505                           ;pwm.c: 66: duty = 1023;
  1506  0293  30FF               	movlw	255
  1507  0294  00A0               	movwf	PWM2_duty@duty
  1508  0295  3003               	movlw	3
  1509  0296  00A1               	movwf	PWM2_duty@duty+1
  1510  0297                     l959:	
  1511                           ;pwm.c: 68: duty = 0;
  1512                           
  1513                           ;pwm.c: 67: if (duty < 0)
  1514                           
  1515                           
  1516                           ;pwm.c: 70: CCP2X = duty & 2;
  1517  0297  129D               	bcf	29,5	;volatile
  1518                           
  1519                           ;pwm.c: 71: CCP2Y = duty & 1;
  1520  0298  1C20               	btfss	PWM2_duty@duty,0
  1521  0299  2A9E               	goto	u390
  1522  029A  1283               	bcf	3,5	;RP0=0, select bank0
  1523  029B  1303               	bcf	3,6	;RP1=0, select bank0
  1524  029C  161D               	bsf	29,4	;volatile
  1525  029D  2AA1               	goto	l963
  1526  029E                     u390:	
  1527  029E  1283               	bcf	3,5	;RP0=0, select bank0
  1528  029F  1303               	bcf	3,6	;RP1=0, select bank0
  1529  02A0  121D               	bcf	29,4	;volatile
  1530  02A1                     l963:	
  1531                           
  1532                           ;pwm.c: 72: CCPR2L = duty >> 2;
  1533  02A1  0821               	movf	PWM2_duty@duty+1,w
  1534  02A2  00A3               	movwf	??_PWM2_duty+1
  1535  02A3  0820               	movf	PWM2_duty@duty,w
  1536  02A4  00A2               	movwf	??_PWM2_duty
  1537  02A5  1003               	clrc
  1538  02A6  0CA3               	rrf	??_PWM2_duty+1,f
  1539  02A7  0CA2               	rrf	??_PWM2_duty,f
  1540  02A8  1003               	clrc
  1541  02A9  0CA3               	rrf	??_PWM2_duty+1,f
  1542  02AA  0CA2               	rrf	??_PWM2_duty,f
  1543  02AB  0822               	movf	??_PWM2_duty,w
  1544  02AC  009B               	movwf	27	;volatile
  1545  02AD  0008               	return
  1546  02AE                     __end_of_PWM2_duty:	
  1547                           
  1548                           	psect	text10
  1549  021B                     __ptext10:	
  1550 ;; *************** function _ISR_Handler *****************
  1551 ;; Defined at:
  1552 ;;		line 73 in file "i2c.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;		None
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;		None
  1557 ;; Return value:  Size  Location     Type
  1558 ;;		None               void
  1559 ;; Registers used:
  1560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1566 ;;      Params:         0       0       0       0       0
  1567 ;;      Locals:         0       0       0       0       0
  1568 ;;      Temps:          5       0       0       0       0
  1569 ;;      Totals:         5       0       0       0       0
  1570 ;;Total ram usage:        5 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; Hardware stack levels required when called:    2
  1573 ;; This function calls:
  1574 ;;		_i2c_read_byte
  1575 ;;		_msg_resolve
  1576 ;; This function is called by:
  1577 ;;		Interrupt level 1
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           
  1582                           ;psect for function _ISR_Handler
  1583  021B                     _ISR_Handler:	
  1584                           
  1585                           ;i2c.c: 76: if (SSPIF) {
  1586  021B  1D8C               	btfss	12,3	;volatile
  1587  021C  2A51               	goto	i1l201
  1588                           
  1589                           ;i2c.c: 83: if (SSPSTATbits.S && SSPSTATbits.READ_WRITE == 0 && SSPSTATbits.DATA_ADDRESS
      +                           == 0)
  1590  021D  1683               	bsf	3,5	;RP0=1, select bank1
  1591  021E  1303               	bcf	3,6	;RP1=0, select bank1
  1592  021F  1994               	btfsc	20,3	;volatile
  1593  0220  1914               	btfsc	20,2	;volatile
  1594  0221  2A28               	goto	i1l196
  1595  0222  1A94               	btfsc	20,5	;volatile
  1596  0223  2A28               	goto	i1l196
  1597                           
  1598                           ;i2c.c: 84: {
  1599                           ;i2c.c: 85: msg.bytes = 0;
  1600  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1601  0225  1303               	bcf	3,6	;RP1=0, select bank0
  1602  0226  01BC               	clrf	_msg
  1603                           
  1604                           ;i2c.c: 86: }
  1605  0227  2A33               	goto	i1l1025
  1606  0228                     i1l196:	
  1607                           
  1608                           ;i2c.c: 93: else if (SSPSTATbits.S && SSPSTATbits.READ_WRITE == 0 && SSPSTATbits.DATA_AD
      +                          DRESS)
  1609  0228  1994               	btfsc	20,3	;volatile
  1610  0229  1914               	btfsc	20,2	;volatile
  1611  022A  2A33               	goto	i1l1025
  1612  022B  1E94               	btfss	20,5	;volatile
  1613  022C  2A33               	goto	i1l1025
  1614                           
  1615                           ;i2c.c: 94: {
  1616                           ;i2c.c: 95: msg.bytes ++;
  1617  022D  3001               	movlw	1
  1618  022E  00F4               	movwf	??_ISR_Handler
  1619  022F  0874               	movf	??_ISR_Handler,w
  1620  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1621  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1622  0232  07BC               	addwf	_msg,f
  1623  0233                     i1l1025:	
  1624                           
  1625                           ;i2c.c: 96: }
  1626                           ;i2c.c: 99: msg.input_buff[msg.bytes] = i2c_read_byte();
  1627  0233  120A  118A  2309  120A  118A  	fcall	_i2c_read_byte
  1628  0238  00F4               	movwf	??_ISR_Handler
  1629  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1630  023A  1303               	bcf	3,6	;RP1=0, select bank0
  1631  023B  083C               	movf	_msg,w
  1632  023C  3E3C               	addlw	(low (_msg| 0))& (0+255)
  1633  023D  0084               	movwf	4
  1634  023E  0874               	movf	??_ISR_Handler,w
  1635  023F  1383               	bcf	3,7	;select IRP bank0
  1636  0240  0080               	movwf	0
  1637                           
  1638                           ;i2c.c: 102: if (msg.bytes == 3)
  1639  0241  3003               	movlw	3
  1640  0242  063C               	xorwf	_msg,w
  1641  0243  1D03               	btfss	3,2
  1642  0244  2A4A               	goto	i1l1031
  1643                           
  1644                           ;i2c.c: 103: msg_resolve();
  1645  0245  120A  118A  22E0  120A  118A  	fcall	_msg_resolve
  1646  024A                     i1l1031:	
  1647                           
  1648                           ;i2c.c: 106: if (msg.bytes > 4)
  1649  024A  3005               	movlw	5
  1650  024B  1283               	bcf	3,5	;RP0=0, select bank0
  1651  024C  1303               	bcf	3,6	;RP1=0, select bank0
  1652  024D  023C               	subwf	_msg,w
  1653  024E  1803               	btfsc	3,0
  1654                           
  1655                           ;i2c.c: 107: msg.bytes = 0;
  1656  024F  01BC               	clrf	_msg
  1657                           
  1658                           ;i2c.c: 109: SSPIF = 0;
  1659  0250  118C               	bcf	12,3	;volatile
  1660  0251                     i1l201:	
  1661  0251  0878               	movf	??_ISR_Handler+4,w
  1662  0252  00FF               	movwf	127
  1663  0253  0877               	movf	??_ISR_Handler+3,w
  1664  0254  008A               	movwf	10
  1665  0255  0876               	movf	??_ISR_Handler+2,w
  1666  0256  0084               	movwf	4
  1667  0257  0E75               	swapf	(??_ISR_Handler+1)^(0+-128),w
  1668  0258  0083               	movwf	3
  1669  0259  0EFE               	swapf	126,f
  1670  025A  0E7E               	swapf	126,w
  1671  025B  0009               	retfie
  1672  025C                     __end_of_ISR_Handler:	
  1673                           
  1674                           	psect	intentry
  1675  0004                     __pintentry:	
  1676                           ;incstack = 0
  1677                           ; Regs used in _ISR_Handler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1678                           
  1679  0004                     interrupt_function:	
  1680  007E                     saved_w	set	btemp
  1681  0004  00FE               	movwf	btemp
  1682  0005  0E03               	swapf	3,w
  1683  0006  00F5               	movwf	??_ISR_Handler+1
  1684  0007  0804               	movf	4,w
  1685  0008  00F6               	movwf	??_ISR_Handler+2
  1686  0009  080A               	movf	10,w
  1687  000A  00F7               	movwf	??_ISR_Handler+3
  1688  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1689  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1690  000D  087F               	movf	btemp+1,w
  1691  000E  00F8               	movwf	??_ISR_Handler+4
  1692  000F  120A  118A  2A1B   	ljmp	_ISR_Handler
  1693                           
  1694                           	psect	text11
  1695  02E0                     __ptext11:	
  1696 ;; *************** function _msg_resolve *****************
  1697 ;; Defined at:
  1698 ;;		line 65 in file "i2c.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;		None               void
  1705 ;; Registers used:
  1706 ;;		wreg, status,2, status,0, pclath, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1712 ;;      Params:         0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0
  1715 ;;      Totals:         0       0       0       0       0
  1716 ;;Total ram usage:        0 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    1
  1719 ;; This function calls:
  1720 ;;		Absolute function
  1721 ;;		_i2c_handler
  1722 ;; This function is called by:
  1723 ;;		_ISR_Handler
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           
  1728                           ;psect for function _msg_resolve
  1729  02E0                     _msg_resolve:	
  1730                           
  1731                           ;i2c.c: 66: (*p)(msg);
  1732                           
  1733                           ;incstack = 0
  1734                           ; Regs used in _msg_resolve: [wreg+status,2+status,0+pclath+cstack]
  1735  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  1736  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  1737  02E2  083F               	movf	_msg+3,w
  1738  02E3  00F3               	movwf	i2c_handler@msg+3
  1739  02E4  083E               	movf	_msg+2,w
  1740  02E5  00F2               	movwf	i2c_handler@msg+2
  1741  02E6  083D               	movf	_msg+1,w
  1742  02E7  00F1               	movwf	i2c_handler@msg+1
  1743  02E8  083C               	movf	_msg,w
  1744  02E9  00F0               	movwf	i2c_handler@msg
  1745  02EA  087B               	movf	_p,w
  1746  02EB  120A  118A  2101   	fcall	i1fptable
  1747  02EE  0008               	return
  1748  02EF                     __end_of_msg_resolve:	
  1749                           
  1750                           	psect	text12
  1751  0302                     __ptext12:	
  1752 ;; *************** function _i2c_handler *****************
  1753 ;; Defined at:
  1754 ;;		line 66 in file "main.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;  msg             4    0[COMMON] struct message
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;		None               void
  1761 ;; Registers used:
  1762 ;;		wreg
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1768 ;;      Params:         4       0       0       0       0
  1769 ;;      Locals:         0       0       0       0       0
  1770 ;;      Temps:          0       0       0       0       0
  1771 ;;      Totals:         4       0       0       0       0
  1772 ;;Total ram usage:        4 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_main
  1778 ;;		_msg_resolve
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           
  1783                           ;psect for function _i2c_handler
  1784  0302                     _i2c_handler:	
  1785                           
  1786                           ;main.c: 67: duty = msg.motor_speed;
  1787                           
  1788                           ;incstack = 0
  1789                           ; Regs used in _i2c_handler: [wreg]
  1790  0302  0871               	movf	i2c_handler@msg+1,w
  1791  0303  1283               	bcf	3,5	;RP0=0, select bank0
  1792  0304  1303               	bcf	3,6	;RP1=0, select bank0
  1793  0305  00C1               	movwf	_duty+1	;volatile
  1794  0306  0870               	movf	i2c_handler@msg,w
  1795  0307  00C0               	movwf	_duty	;volatile
  1796  0308  0008               	return
  1797  0309                     __end_of_i2c_handler:	
  1798                           
  1799                           	psect	text13
  1800  0309                     __ptext13:	
  1801 ;; *************** function _i2c_read_byte *****************
  1802 ;; Defined at:
  1803 ;;		line 61 in file "i2c.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;		None
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;		None
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      unsigned char 
  1810 ;; Registers used:
  1811 ;;		wreg
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1817 ;;      Params:         0       0       0       0       0
  1818 ;;      Locals:         0       0       0       0       0
  1819 ;;      Temps:          0       0       0       0       0
  1820 ;;      Totals:         0       0       0       0       0
  1821 ;;Total ram usage:        0 bytes
  1822 ;; Hardware stack levels used:    1
  1823 ;; This function calls:
  1824 ;;		Nothing
  1825 ;; This function is called by:
  1826 ;;		_ISR_Handler
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           
  1831                           ;psect for function _i2c_read_byte
  1832  0309                     _i2c_read_byte:	
  1833                           
  1834                           ;i2c.c: 62: return SSPBUF;
  1835                           
  1836                           ;incstack = 0
  1837                           ; Regs used in _i2c_read_byte: [wreg]
  1838  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1839  030A  1303               	bcf	3,6	;RP1=0, select bank0
  1840  030B  0813               	movf	19,w	;volatile
  1841  030C  0008               	return
  1842  030D                     __end_of_i2c_read_byte:	
  1843  0002                     
  1844                           	psect	functab
  1845  0100                     __pfunctab:	
  1846  0100                     fptable:	
  1847  0100  2900               	goto	fptable	;no entries
  1848  0101                     __i1fptable:	
  1849  0101                     i1fptable:	
  1850  0101  00FF               	movwf	(btemp+1)& (0+127)
  1851  0102  3001               	movlw	high i1fptable
  1852  0103  008A               	movwf	10
  1853  0104  087F               	movf	(btemp+1)& (0+127),w
  1854  0105  0782               	addwf	2,f
  1855  0106                     i1fpbase:	
  1856  0106  2906               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
  1857  0107                     fp__i2c_handler:	
  1858  0107  120A  118A  2B02   	ljmp	_i2c_handler
  1859  010A                     __end_of__i1fptable:	
  1860  007E                     btemp	set	126	;btemp
  1861  007E                     wtemp	set	126
  1862  007E                     wtemp0	set	126
  1863  0080                     wtemp1	set	128
  1864  0082                     wtemp2	set	130
  1865  0084                     wtemp3	set	132
  1866  0086                     wtemp4	set	134
  1867  0088                     wtemp5	set	136
  1868  007F                     wtemp6	set	127
  1869  007E                     ttemp	set	126
  1870  007E                     ttemp0	set	126
  1871  0081                     ttemp1	set	129
  1872  0084                     ttemp2	set	132
  1873  0087                     ttemp3	set	135
  1874  007F                     ttemp4	set	127
  1875  007E                     ltemp	set	126
  1876  007E                     ltemp0	set	126
  1877  0082                     ltemp1	set	130
  1878  0086                     ltemp2	set	134
  1879  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         8
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     28      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            80      0       0

Pointer List with Targets:

    sp_Absolute function	PTR void  size(1) Largest target is 0

    sp__h	PTR void  size(1) Largest target is 0

    sp__p	PTR void  size(1) Largest target is 0

    i2c_set_handler@h	PTR FTN(struct message,)PTR void  size(1) Largest target is 0
		 -> i2c_handler(), 

    p	PTR FTN(struct message,)PTR void  size(1) Largest target is 2
		 -> Absolute function(), i2c_handler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR_Handler in COMMON

    _msg_resolve->Absolute function
    _msg_resolve->_i2c_handler

Critical Paths under _main in BANK0

    _main->_PWM2_init
    _adc_channel->_get_input
    _PWM2_init->___lldiv

Critical Paths under _ISR_Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    1285
                                             22 BANK0      6     6      0
                          _PWM2_duty
                          _PWM2_init
                         _PWM2_start
                        _adc_channel
                     _i2c_init_slave
                    _i2c_set_handler
                           _init_adc
 ---------------------------------------------------------------------------------
 (1) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_set_handler                                      2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _i2c_init_slave                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_channel                                          6     4      2     452
                                              1 BANK0      6     4      2
                          _get_input
 ---------------------------------------------------------------------------------
 (2) _get_input                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM2_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM2_init                                            8     4      4     526
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     418
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _PWM2_duty                                            4     2      2     260
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR_Handler                                          5     5      0      65
                                              4 COMMON     5     5      0
                      _i2c_read_byte
                        _msg_resolve
 ---------------------------------------------------------------------------------
 (4) _msg_resolve                                          0     0      0      65
                   Absolute function *
                        _i2c_handler *
 ---------------------------------------------------------------------------------
 (5) _i2c_handler                                          4     0      4      65
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (4) _i2c_read_byte                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM2_duty
   _PWM2_init
     ___lldiv
   _PWM2_start
   _adc_channel
     _get_input
   _i2c_init_slave
   _i2c_set_handler
   _init_adc

 _ISR_Handler (ROOT)
   _i2c_read_byte
   _msg_resolve
     Absolute function(Fake) *
     _i2c_handler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       8        0.0%
BITBANK3            60      0       0       7        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       9        0.0%
BITBANK2            50      0       0      11        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BITBANK1            50      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1C      26       4       47.5%
BITBANK0            50      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      33      12        0.0%
ABS                  0      0      33      10        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Mar 12 17:21:11 2016

                       _p 007B                         pc 0002               __CFG_CP$OFF 0000  
             _SSPSTATbits 0094                        l61 02DD      __size_of_adc_channel 002E  
                     l905 018C                       l915 01C4                       l907 019C  
                     l919 01D1                       l963 02A1                       l959 0297  
                     l993 013E                       _GIE 005F                       u305 0190  
                     u325 019E                       _PR2 0092                       u335 01B3  
                     u345 01C5                       u365 01E5                       u390 029E  
                     u375 01EE                       u527 02D5                       _msg 003C  
                     fsr0 0004                       indf 0000              __CFG_IESO$ON 0000  
            __CFG_FOSC$HS 0000                      _PEIE 005E             __CFG_FCMEN$ON 0000  
           ??_i2c_handler 0074             _i2c_read_byte 0309                      _main 010A  
                    _freq 0042                      _duty 0040                      btemp 007E  
       ??_i2c_set_handler 0020             __CFG_BOREN$ON 0000                      ltemp 007E  
                    start 0012                      ttemp 007E                      wtemp 007E  
           __CFG_MCLRE$ON 0000                     ?_main 0070                     _CCP1X 00BD  
                   _CCP1Y 00BC                     _CCP2X 00ED                     _CCP2Y 00EC  
           __CFG_WDTE$OFF 0000                     _ANSEL 0091           __end_of___lldiv 01DA  
                   i1l201 0251                     i1l196 0228                     _PORTD 0008  
                   _TRISA 0085                     _TRISD 0088                     _SSPIE 0463  
                   _SSPIF 0063            _i2c_init_slave 02C1        __size_of_PWM2_init 0041  
      __size_of_PWM2_duty 0024                     fpbase 0000               ?_PWM2_start 0070  
                   pclath 000A                     ltemp0 007E                     ltemp1 0082  
                   ltemp2 0086                     ltemp3 0080            ?_i2c_read_byte 0070  
                   ttemp0 007E                     ttemp1 0081                     ttemp2 0084  
                   ttemp3 0087                     ttemp4 007F                     status 0003  
                   wtemp0 007E                     wtemp1 0080                     wtemp2 0082  
                   wtemp3 0084                     wtemp4 0086                     wtemp5 0088  
                   wtemp6 007F           __initialization 0015       __end_of_i2c_handler 0309  
            __end_of_main 017A              ?_ISR_Handler 0070                    ??_main 0036  
  __end_of_i2c_init_slave 02D1              ?_msg_resolve 0070                    _CCP1M2 00BA  
                  _CCP1M3 00BB                    _CCP2M2 00EA                    _CCP2M3 00EB  
                  _ADRESH 001E                    _ADRESL 009E                    _CCPR1L 0015  
                  _CCPR2L 001B                    i1l1031 024A                    i1l1025 0233  
              __i1fptable 0101                    _TMR2ON 0092                    _SSPADD 0093  
                  _TRISC1 0439                    _TRISC2 043A                    _TRISC6 043E  
                  _TRISC7 043F                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000                 ??___lldiv 0028         __end_of_PWM2_init 021B  
       __end_of_PWM2_duty 02AE          __end_of_init_adc 02C1       __size_of_PWM2_start 000B  
                  fptable 0100              __pdataCOMMON 007C                    fptotal 0000  
         ?_i2c_init_slave 0070                    saved_w 007E           ??_i2c_read_byte 0070  
 __end_of__initialization 0021               _i2c_handler 0302            __pcstackCOMMON 0070  
         _i2c_set_handler 02FA        __size_of_get_input 000F                __pbssBANK0 003C  
              __pnvCOMMON 007B                __pmaintext 010A             ??_adc_channel 0023  
              __pintentry 0004                   _T2CKPS0 0090                   _T2CKPS1 0091  
        i2c_set_handler@h 0021      __size_of_ISR_Handler 0041              ??_PWM2_start 0020  
    __size_of_msg_resolve 000F                   i1fpbase 0106                 ?_init_adc 0070  
       __end_of_get_input 02E0                   ___lldiv 017A   __end_of_i2c_set_handler 0302  
                 __ptext1 02AE                   __ptext2 02FA                   __ptext3 02C1  
                 __ptext4 025C                   __ptext5 02D1                   __ptext6 02EF  
                 __ptext7 01DA                   __ptext8 017A                   __ptext9 028A  
      __end_of_PWM2_start 02FA       __end_of_adc_channel 028A       __size_of__i1fptable 0009  
      adc_channel@adc_val 0025      end_of_initialization 0021                ??_init_adc 0020  
         ___lldiv@divisor 0020           ___lldiv@counter 002D            fp__i2c_handler 0107  
        ??_i2c_init_slave 0020                 _PWM2_init 01DA                 _PWM2_duty 028A  
               _TRISBbits 0086              ?_i2c_handler 0070               _adc_channel 025C  
           __pidataCOMMON 030D          ?_i2c_set_handler 0070                ?_PWM2_init 002E  
              ?_PWM2_duty 0020       start_initialization 0015             adc_channel@ch 0021  
   __end_of_i2c_read_byte 030D            i2c_handler@msg 0070        __end_of__i1fptable 010A  
             __pbssCOMMON 0079                 ___latbits 0002             __pcstackBANK0 0020  
               __pnvBANK0 0042         __size_of_init_adc 0013                 __pfunctab 0100  
                ?___lldiv 0020                 _direction 007C             ??_ISR_Handler 0074  
               _get_input 02D1               ??_PWM2_init 0032               ??_PWM2_duty 0022  
           ??_msg_resolve 0074         interrupt_function 0004      __size_of_i2c_handler 0007  
              ?_get_input 0070                _ADCON0bits 001F                _ADCON1bits 009F  
     __end_of_ISR_Handler 025C                  i1fptable 0101                  i1fptotal 0002  
     __end_of_msg_resolve 02EF              ?_adc_channel 0021          __size_of___lldiv 0060  
                __ptext10 021B                  __ptext11 02E0                  __ptext12 0302  
                __ptext13 0309                  _init_adc 02AE             __size_of_main 0070  
             ??_get_input 0020             PWM2_duty@duty 0020               _ISR_Handler 021B  
 __size_of_i2c_init_slave 0010               _msg_resolve 02E0  __size_of_i2c_set_handler 0008  
              _LED_output 0079                  intlevel1 0100          ___lldiv@dividend 0024  
            PWM2_init@fre 002E    __size_of_i2c_read_byte 0004         main@adc_value1_70 003A  
       main@adc_value2_71 0036         main@adc_value3_72 0038          ___lldiv@quotient 0029  
              _PWM2_start 02EF  
